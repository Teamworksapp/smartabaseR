% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export.R
\name{sb_get_event}
\alias{sb_get_event}
\title{Export event data}
\usage{
sb_get_event(
  form,
  date_range,
  url,
  username,
  password,
  filter,
  ...,
  option = sb_get_event_option(),
  time_range = c("12:00 am", "11:59 pm")
)
}
\arguments{
\item{form}{Name of Smartabase event form}

\item{date_range}{Character vector of length two containing valid start_date
end_date (dd/mm/YYYY) character values}

\item{url}{Smartabase url e.g. "example.smartabase.com/site"}

\item{username}{Smartabase username}

\item{password}{Smartabase password}

\item{filter}{More filters accessible via \code{\link[=sb_get_event_filter]{sb_get_event_filter()}} object}

\item{...}{These dots are for future extensions and must be empty}

\item{option}{More options accessible via \code{\link[=sb_get_event_option]{sb_get_event_option()}} object}

\item{time_range}{Vector of length two containing a valid start_time and
and end_time (h:mm am/pm) character values. Defaults to
\verb{c("12:00 am", "11:59 pm)}.}
}
\value{
A tibble containing Smartabase event data
}
\description{
\code{sb_get_event()} exports data from a Smartabase event form using
the Smartabase API. It requires the user to input a valid Smartabase
event form name, date range, url and credentials.

For more details see the help vignette:
\code{vignette("exporting-data")}
}
\section{date_range}{

\code{sb_get_event()} returns events that occur between a start date and an end
date. We must supply these dates via the \code{date_range} argument which
accepts a vector of length two. The first element is the start date
and the second element is the end date. The dates must be character types
represented in "dd/mm/YYYY" format.

Alternatively you can use the \code{\link[=sb_date_range]{sb_date_range()}} function to
generate the date range dynamically. See \code{\link[=sb_date_range]{sb_date_range()}} for more
details.
}

\section{filter}{

There are also a range extra filters than can be supplied to the \code{filter}
argument, including user filters, data filters and filters for getting the
most recent events. In order to reduce argument clutter in
\code{sb_get_event()}, all optional filters must be generated by the
\code{\link[=sb_get_event_filter]{sb_get_event_filter()}} function.
}

\section{time_range}{

As well as requiring a date range from which to export events,
\code{sb_get_event()} also optionally allows specification of a valid time range.
Similar to \code{date_range}, \code{time_range} is a length 2 character vector. The
first element is the start time and the second element is the end time. The
times must be character types represented in "h:mm am/pm" format. Defaults
to c("12:00 am", "11:59 pm").
}

\section{option}{

There are also a range of extra options than can be supplied to the \code{option}
argument, including options for downloading attachments and suppressing
messages to the console, among others.  In order to reduce argument clutter
in \code{sb_get_event()}, all options must be generated by the
\code{\link[=sb_get_event_option]{sb_get_event_option()}} function.
}

\examples{
\dontrun{
# Get one week of wellness data from 'example.smartabase.com/site':
sb_get_event(
  form = "Daily Wellness",
  date_range = c("15/04/2023", "22/04/2023"),
  url = "example.smartabase.com/site",
  username = "example.user",
  password = "example_password"
)

# Now retrieve data for the last 7 days using [sb_date_range()],
# then, using [sb_get_event_filter()], filter for users in the Smartabase
# group "example_group" and only return values where "example_field" is
# greater than 1. Also download any attachments if they're available using
# [sb_get_event_option()].
sb_get_event(
  form = "Daily Wellness",
  date_range = sb_date_range("7", "days"),
  url = "example.smartabase.com/site",
  username = "example.user",
  password = "example_password",
  filter = sb_get_event_filter(
    user_key = "group",
    user_value = "example_group",
    data_key = "example_field",
    data_value = 1,
    data_condition = "greater_than"
  ),
  option = sb_get_event_option(
    download_attachment = TRUE
  )
)
}

}
\seealso{
\code{\link[=sb_get_profile]{sb_get_profile()}} for profile data.
\code{\link[=sb_get_user]{sb_get_user()}} for user data.
\code{\link[=sb_sync_event]{sb_sync_event()}} to synchronise with an event form.

Other export functions: 
\code{\link{sb_get_profile}()},
\code{\link{sb_get_user}()},
\code{\link{sb_sync_event}()}
}
\concept{export functions}
