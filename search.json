[{"path":"https://teamworksapp.github.io/smartabaseR/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (https://www.contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to smartabaseR","title":"Contributing to smartabaseR","text":"welcome contributions smartabaseR! guidelines help make easier merge pull request (credit tidyverse contribution guidelines ):","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to smartabaseR","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES: edit roxygen comment .R file R/. : edit .Rd file man/.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Contributing to smartabaseR","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"Contributing to smartabaseR","text":"recommend create Git branch pull request (PR). New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat. Contributions test cases included easier accept. user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to smartabaseR","text":"Please note smartabaseR project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Teamworks Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/articles/credentials.html","id":"required-credentials","dir":"Articles","previous_headings":"","what":"Required credentials","title":"Credentials","text":"Every call exported smartabaseR functions requires url, username password. Note: usernames emails interchangeable; smartabaseR accepts valid Smartabase usernames.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/articles/credentials.html","id":"credential-storage","dir":"Articles","previous_headings":"","what":"Credential storage","title":"Credentials","text":"smartabaseR documentation, supply credentials plain text directly examples. sake space, production environments advise storing Smartabase credentials plain text anywhere, let alone main function call see. excellent documentation explores options: https://CRAN.R-project.org/package=httr/vignettes/secrets.html ’d like reiterate something Hadley Wickham says document: “Regardless store , use secrets still need read R variables. careful expose printing saving file.”","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/articles/credentials.html","id":"environment-variables","dir":"Articles","previous_headings":"Credential storage","what":"Environment variables","title":"Credentials","text":"worst, suggest storing credentials environment variables. still stored plain text, least don’t need shown screen using smartabaseR interactive environment. set environment variables SB_URL, SB_USER SB_PASS, script call credentials like :","code":"## Opens .Reviron file file.edit(\"~/.Renviron\") sb_get_event(   form = \"Training Log\",   date_range = c(\"01/03/2023\", \"07/03/2023\"),   url = Sys.getenv(\"SB_URL\"),   username = Sys.getenv(\"SB_USER\"),   password = Sys.getenv(\"SB_PASS\") )"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/credentials.html","id":"keyring","dir":"Articles","previous_headings":"Credential storage","what":"keyring","title":"Credentials","text":"better option use package like keyring gives control secrets accessed.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/articles/credentials.html","id":"ask-every-time","dir":"Articles","previous_headings":"Credential storage","what":"Ask every time","title":"Credentials","text":"laborious option request password every time: rstudioapi::askForPassword() getPass::getPass().","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/articles/exporting-data.html","id":"date_range","dir":"Articles","previous_headings":"","what":"date_range","title":"Exporting Data","text":"must supply every call sb_get_event() date_range value. example, export event data event dates March 1st 2023 March 7th 2023, write: valid date_range value must vector length 2 containing start_date end_date formatted dd/mm/YYYY. must also character types (, produced .Date(), instance) end_date must occur start_date.","code":"sb_get_event(   form = \"Example Form\",   date_range = c(\"01/03/2023\", \"07/03/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\" )"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/exporting-data.html","id":"sb_date_range","dir":"Articles","previous_headings":"date_range","what":"sb_date_range()","title":"Exporting Data","text":"Sometimes ’s easier think date ranges relative terms today (.e. format(lubridate::today(), \"%d/%m/%Y)). sb_date_range() sets end_date today default supplies start_date depending far want look back. instance, want data last week: call sb_get_event(): can also set end_date:","code":"sb_date_range(duration_value = \"7\", duration_unit = \"days\") #>   start_date     end_date  #> \"15/04/2023\" \"22/04/2023\" sb_get_event(   form = \"Example Form\",   date_range = sb_date_range(\"7\", \"days\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\" ) sb_get_event(   form = \"Example Form\",   date_range = sb_date_range(\"7\", \"days\", end_date = \"31/12/1999\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\" )"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/exporting-data.html","id":"time_range","dir":"Articles","previous_headings":"","what":"time_range","title":"Exporting Data","text":"can also optionally supply time_range value. default set time_range = c(\"12:00 \", \"11:59 pm\"), doesn’t filter events based event time. However situation require export events occurred within specific times day, can manually supply time_range value like : export events started March 1st 12:45 PM 1:15 PM. time_range rules date_range arguments, except course must now use time notation. Smartabase API requires format h:mm /PM.","code":"sb_get_event(   form = \"Example Form\",   date_range = c(\"01/03/2023\", \"01/03/2023\"),   time_range = c(\"12:45 PM\", \"1:15 PM\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\" )"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/exporting-data.html","id":"filter","dir":"Articles","previous_headings":"","what":"filter","title":"Exporting Data","text":"NOTE: next major release smartabaseR, filter argument required calling export function. particular, user_key user_value required. filter values must generated relevant helper function. , ’re using sb_get_event() export data athlete Jamie Anderson, need use sb_get_event_filter(): export function associated filter function: sb_sync_event(..., filter = sb_sync_event_filter()) sb_get_profile(..., filter = sb_get_profile_filter()) sb_get_id(..., filter = sb_get_id_filter()) etc… goes detail available filter.","code":"sb_get_event(   form = \"Example Form\",   date_range = c(\"01/03/2023\", \"07/03/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   filter = sb_get_event_filter(     user_key = \"about\",     user_value = \"Jamie Anderson\"   ) )"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/exporting-data.html","id":"user-filtering","dir":"Articles","previous_headings":"filter","what":"User filtering","title":"Exporting Data","text":"Note: section applies sb_get_event() sb_get_profile(). user_key user_value allow filter event/profile data specific Smartabase users. user_key represents user identification method: \"\", \"user_id\", \"username\" \"email\". wanted filter athlete “Aiden Thomas” ”d set user_key = \"\" user_value = \"Aiden Thomas\". user_key = \"\", data_value accepts full names. user_id user_key = \"user_id\", user_value accepts Smartabase user IDs. Note: Smartabase user IDs automatically generated system may different Smartabase UUIDs, can manually set Smartabase admin site. username user_key = \"username\", user_value accepts Smartabase usernames. email user_key = \"email\", user_value accepts users’ emails, recorded Smartabase. current_group user_key = \"current_group\", Smartabase API look whatever Smartabase group loaded last logged Smartabase. Data exported users. user_value ignored. group user_key = \"group\", user_value accepts name Smartabase group. Data exported users Smartabase group. see list Smartabase groups access , use sb_get_group() function. details, see vignette(helper-functions).","code":"sb_get_event(   form = \"Example event form\",   date_range = c(\"01/03/2023\", \"07/03/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   filter = sb_get_event_filter(     user_key = \"about\",     user_value = c(\"Aiden Thomas\", \"Jamie Anderson\")   ) ) sb_get_event(   form = \"Example event form\",   date_range = c(\"01/03/2023\", \"07/03/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   filter = sb_get_event_filter(      user_key = \"user_id\",     user_value = c(37204, 37201)   ) ) sb_get_event(   form = \"Example event form\",   date_range = c(\"01/03/2023\", \"07/03/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   filter = sb_get_event_filter(      user_key   = \"username\",     user_value = c(\"aiden.thomas\", \"jamie.anderson\"),   ) ) sb_get_event(   form = \"Example event form\",   date_range = c(\"01/03/2023\", \"07/03/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   filter = sb_get_event_filter(     user_key = \"email\",     user_value = c(\"aiden.thomas@teamworks.com\",                     \"jamie.anderson@teamworks.com\"),   ) ) sb_get_event(   form = \"Example event form\",   date_range = c(\"01/03/2023\", \"07/03/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   filter = sb_get_event_filter(     user_key = \"current_group\"   ) ) sb_get_event(   form = \"Example event form\",   date_range = c(\"01/03/2023\", \"07/03/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   filter = sb_get_event_filter(      user_key = \"group\",     user_value = \"Demo Users\"   ) )"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/exporting-data.html","id":"data-filtering","dir":"Articles","previous_headings":"filter","what":"Data filtering","title":"Exporting Data","text":"Note: profile forms don’t allow data filtering. section applies sb_get_event().","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/articles/exporting-data.html","id":"data_key-data_value","dir":"Articles","previous_headings":"filter > Data filtering","what":"data_key / data_value","title":"Exporting Data","text":"data_key data_value allow filter data according certain rules. example, “Training Log” form “Duration” field, want export data Duration equal “35”, sb_get_event() call may look like ","code":"sb_get_event(   form = \"Training Log\",   date_range = c(\"01/03/2023\", \"07/03/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   filter = sb_get_event_filter(      data_key = \"Duration\",     data_value = \"35\"   ) )"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/exporting-data.html","id":"data_condition","dir":"Articles","previous_headings":"filter > Data filtering","what":"data_condition","title":"Exporting Data","text":"default, records equal data_value exported. However, may want export records , example, Duration greater “35”. can achieve supplying “greater_than” data_condition argument: data_condition accepts following values: \"equal_to\" \"not_equal_to\" \"greater_than\" \"less_than\" \"greater_than_or_equal_to\" \"less_than_or_equal_to\" \"contains\" Note “greater_than”, “greater_than_or_equal_to”, “less_than” “less_than_or_equal_to” operators work number fields. can use multiple filters call sb_get_event(). example, wanted events Duration < 25 RPE > 6: Just aware API look data meet criterion. Practically tends mean makes sense create competing conditions single Smartabase field: ’s impossible Duration value greater 25 less 6, API returns nothing. Also note data_key, data_condition data_value must length.","code":"sb_get_event(   form = \"Training Log\",   date_range = c(\"01/03/2023\", \"07/03/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   filter = sb_get_event_filter(      data_key = \"Duration\",     data_value = \"35\",     data_condition = \"greater_than\"   ) ) sb_get_event(   form = \"Training Log\",   date_range = c(\"01/03/2023\", \"07/03/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   filter = sb_get_event_filter(      data_key = c(\"Duration\", \"RPE\"),     data_value = c(\"25\", \"6\"),     data_condition = c(\"less_than\", \"greater_than\")   ) ) sb_get_event(   form = \"Training Log\",   date_range = c(\"01/03/2023\", \"07/03/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   filter = sb_get_event_filter(      data_key = c(\"Duration\", \"Duration\"),     data_value = c(\"25\", \"6\"),     data_condition = c(\"greater_than\", \"less_than\")   ) ) #> # A tibble: 0 × 0"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/exporting-data.html","id":"summary","dir":"Articles","previous_headings":"filter","what":"Summary","title":"Exporting Data","text":"examples filtering multiple users multiple conditions one sb_get_event() call.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/articles/exporting-data.html","id":"filter-example-1","dir":"Articles","previous_headings":"filter > Summary","what":"Filter example 1","title":"Exporting Data","text":"want filter 1) “Aiden Thomas” “Jamie Anderson” using emails 2) events Duration less “25” minutes RPE greater equal “6”, sb_get_event() call look like :","code":"sb_get_event(   form = \"Training Log\",   date_range = c(\"01/03/2023\", \"07/03/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   filter = sb_get_event_filter(      user_key = \"email\",     user_value = c(\"aiden.thomas@teamworks\", \"jamie.anderson@teamworks\"),     data_key = c(\"Duration\", \"Duration\"),     data_value = c(\"25\", \"6\"),     data_condition = c(\"greater_than\", \"less_than\")   ) )"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/exporting-data.html","id":"filter-example-2","dir":"Articles","previous_headings":"filter > Summary","what":"Filter example 2","title":"Exporting Data","text":"Alternatively, wanted data 1) “Aiden Thomas” “Jamie Anderson” using full names 2) events Duration equal “50” minutes RPE contains word “Hard”:","code":"sb_get_event(   form = \"Training Log\",   date_range = c(\"01/03/2023\", \"07/03/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   filter = sb_get_event_filter(      user_key = \"email\",     user_value = c(\"Aiden Thomas\", \"Jamie Anderson\"),     data_key = c(\"Duration\", \"RPE\"),     data_value = c(\"50\", \"Hard\"),     data_condition = c(\"not_equal_to\", \"contains\")   ) )"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/exporting-data.html","id":"option","dir":"Articles","previous_headings":"","what":"option","title":"Exporting Data","text":"option values must generated relevant helper function. , ’re using sb_get_event() export data want every column string, use sb_get_event_option(guess_col_type = FALSE): export function associated option function: sb_sync_event(..., option = sb_sync_event_option()) sb_get_profile(..., option = sb_get_profile_option()) sb_get_id(..., option = sb_get_id_option()) etc… goes detail available option.","code":"sb_get_event(   form = \"Example Form\",   date_range = c(\"01/03/2023\", \"07/03/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   option = sb_get_event_option(     guess_col_type = FALSE   ) )"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/exporting-data.html","id":"cache","dir":"Articles","previous_headings":"option","what":"cache","title":"Exporting Data","text":"first time call Smartabase API within given R session, smartabaseR makes call sb_login(). cache option set TRUE (default), login object saved memory passed calls Smartabase API. cache option FALSE, subsequent call Smartabase API preceded call sb_login().","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/articles/exporting-data.html","id":"download_attachment","dir":"Articles","previous_headings":"option","what":"download_attachment","title":"Exporting Data","text":"exporting data contains file upload field, can download uploaded files local machine setting download_attachment = TRUE. Smartabase return event data well associated files, downloaded current directory.","code":"sb_get_event(   form = \"Example Form\",   date_range = c(\"17/03/2023\", \"17/03/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   option = sb_get_event_option(     download_attachment = TRUE   ) ) #> ✔ Hydration (SS) attachment download successful: 5 out of 5 files (80.01kb total) saved to C:/Users/ZacPross/Example_directory #> ✔ Hydration (SS) export successful (17/03/2023 - 17/03/2023). #> # A tibble: 1 × 12 #>   about         user_id form  start_date File  Distance   RPE entered_by_user_id #>   <chr>           <dbl> <chr> <chr>      <chr>    <dbl> <dbl>              <dbl> #> 1 Jamie Anders…   37201 Exam… 18/04/2023 1234…     3100     7              37201 #> # ℹ 4 more variables: event_id <dbl>, file_name <chr>, attachment_url <chr>, #> #   name <chr>"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/exporting-data.html","id":"include_missing_users","dir":"Articles","previous_headings":"option","what":"include_missing_users","title":"Exporting Data","text":"athlete data stored (requested date_range, Smartabase API won’t return event data athlete. sometimes ’s interesting include rows athletes data stored . instance, let’s say want get data “Training Log” last 2 days include athletes “Demo Group”, irrespective data “Training Log” 2 days: Jamie Anderson Liam Walker haven’t entered data, prove relevant information data quality reporting.","code":"sb_get_event(   form = \"Training Log\",   date_range = sb_date_range(\"2\", \"days\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   filter = sb_get_event_filter(     user_key = \"group\",     user_value = \"Demo Group\"   )   option = sb_get_event_option(     include_missing_users = TRUE   ) ) #> # A tibble: 4 × 8 #>   about      user_id form  start_date Distance   RPE entered_by_user_id event_id #>   <chr>        <dbl> <chr> <chr>         <dbl> <dbl>              <dbl>    <dbl> #> 1 Charlie T…   31808 Exam… 15/04/2023     5411     7              37201    16517 #> 2 Jack Will…   31811 Exam… 15/04/2023     2374     3              37201    36505 #> 3 Jamie And…   37201 NA    NA               NA    NA                 NA       NA #> 4 Liam Walk…   37204 NA    NA               NA    NA                 NA       NA"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/exporting-data.html","id":"guess_col_type","dir":"Articles","previous_headings":"option","what":"guess_col_type","title":"Exporting Data","text":"default, sb_get_event() sb_get_profile() guess data type column. example, setting guess_col_type = TRUE: Notice tibble column <chr> top. means column character type. Distance column <dbl> top, means contains numeric data. However, don’t want sb_get_event() guess column types, ’d prefer column come character types, set guess_col_type = FALSE. Notice Distance column now <chr>, whereas <dbl>. things note: metadata columns user_id, entered_by_user_id event_id affected guess_col_type argument – always come numeric. Event dates always exported character types since ’s required importing back Smartabase.","code":"sb_get_event(   form = \"Training Log\",   date_range = sb_date_range(\"2\", \"days\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   filter = sb_get_event_filter(     user_key = \"about\",     user_value = \"Charlie Thompson\"   )   option = sb_get_event_option(     guess_col_type = TRUE   ) ) #> # A tibble: 1 × 9 #>   about            user_id form      start_date `Date of Session` Distance   RPE #>   <chr>              <dbl> <chr>     <chr>      <chr>                <dbl> <dbl> #> 1 Charlie Thompson   31808 Example … 15/04/2023 15/04/2023            5411     7 #> # ℹ 2 more variables: entered_by_user_id <dbl>, event_id <dbl> sb_get_event(   form = \"Training Log\",   date_range = sb_date_range(\"2\", \"days\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   filter = sb_get_event_filter(     user_key = \"about\",     user_value = \"Charlie Thompson\"   )   option = sb_get_event_option(     guess_col_type = FALSE   ) ) #> # A tibble: 1 × 10 #>   about       user_id form  start_date end_date `Date of Session` Distance RPE   #>   <chr>         <dbl> <chr> <chr>      <chr>    <chr>             <chr>    <chr> #> 1 Charlie Th…   31808 Exam… 15/04/2023 17/04/2… 1555288875000     5411     7     #> # ℹ 2 more variables: entered_by_user_id <dbl>, event_id <dbl>"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/exporting-data.html","id":"interactive_mode","dir":"Articles","previous_headings":"option","what":"interactive_mode","title":"Exporting Data","text":"sb_get_event() sb_get_profile() accept input called interactive_mode. interactive_mode = FALSE, messages printed screen. package run automated environments. situations may want minimise progress messages clogging logs.","code":"sb_get_event(   form = \"Training Log\",   date_range = sb_date_range(\"2\", \"days\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   filter = sb_get_event_filter(     user_key = \"about\",     user_value = \"Charlie Thompson\"   ),   option = sb_get_event_option(     interactive_mode = FALSE   ) )"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/get-started.html","id":"load-smartabaser","dir":"Articles","previous_headings":"","what":"Load smartabaseR","title":"Get Started","text":"","code":"library(smartabaseR)"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/get-started.html","id":"requirements","dir":"Articles","previous_headings":"","what":"Requirements","title":"Get Started","text":"smartabaseR can used Smartabase versions 6.14 greater (account superadmin site owner privileges, smartabaseR can also used v6.13). 2023, Smartabase switched calendar versioning. smartabaseR can used site uses calendar versioning e.g. 2023.1, 2023.2 etc.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/articles/get-started.html","id":"credentials","dir":"Articles","previous_headings":"Requirements","what":"Credentials","title":"Get Started","text":"Please see vignette(\"credentials\").","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/articles/get-started.html","id":"exporting-data-from-smartabase","dir":"Articles","previous_headings":"Requirements","what":"Exporting data from Smartabase","title":"Get Started","text":"Exporting Smartabase data smartabaseR easy sb_get_event() function. minimum need supply values form, date_range, url, username password arguments. Note date_range contains start_date end_date must dd/mm/YYYY format. successful export! Training Log data two athletes named Aiden Thomas Jamie Anderson. Note, frequently exporting data (especially large data sets) can put stress Smartabase server may affect organisation’s Smartabase experience. minimum, please save exported data variable (saved variable called “training_data”). minimises unnecessary API calls.","code":"sb_get_event(   form = \"Training Log\",   date_range = c(\"01/03/2023\", \"07/03/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.username\", # note: must be valid username, not email   password = \"example_password\" ) #> ✔ Successfully logged example.username into example.smartabase.com/site. #> ✔ User details export successful. #> ✔ Training Log export successful (Mar 03 2020 - Mar 07 2023). #> # A tibble: 2 × 7 #>   start_date user_id about          distance   rpe event_id entered_by_user_id #>   <chr>        <dbl> <chr>             <dbl> <dbl>    <dbl>              <dbl> #> 1 03/01/2023   37204 Aiden Thomas       2530     5  2381840              37204 #> 2 03/01/2023   37201 Jamie Anderson     5411     7  2382033              37201"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/get-started.html","id":"importing-data-to-smartabase","dir":"Articles","previous_headings":"","what":"Importing data to Smartabase","title":"Get Started","text":"can also import R data frame Smartabase using sb_insert_event(). Imagine want calculate difference athlete’s RPE team average RPE upload results form called “Team Summary” First, calculate team average: Now compare group average athlete’s RPE: Finally, upload results back Smartabase, need supply data frame form name well credentials: Success! data now imported “Team Summary” form Smartabase. learn get smartabaseR, please see exporting-data importing-data vignettes.","code":"# Need to load dplyr library(dplyr)  rpe_average <- training_data %>%   select(-entered_by_user_id) %>%   mutate(team_rpe = round(mean(rpe), 1))  rpe_average #> # A tibble: 2 × 7 #>   start_date user_id about          distance   rpe event_id team_rpe #>   <chr>        <dbl> <chr>             <dbl> <dbl>    <dbl>    <dbl> #> 1 03/01/2023   37204 Aiden Thomas       2530     5  2381840        6 #> 2 03/01/2023   37201 Jamie Anderson     5411     7  2382033        6 rpe_average <- rpe_average %>%   mutate(rpe_diff = rpe - team_rpe)  rpe_average #> # A tibble: 2 × 8 #>   start_date user_id about          distance   rpe event_id team_rpe rpe_diff #>   <chr>        <dbl> <chr>             <dbl> <dbl>    <dbl>    <dbl>    <dbl> #> 1 03/01/2023   37204 Aiden Thomas       2530     5  2381840        6       -1 #> 2 03/01/2023   37201 Jamie Anderson     5411     7  2382033        6        1 sb_insert_event(   df = rpe_average,   form = \"Team Summary\",   url = \"example.smartabase.com/site\",   username = \"example.username\", # note: must be valid username, not email   password = \"example_password\" ) #> ✔ SUCCESSFULLY_INSERTED: 2 out of 2 records successfully inserted into Team Summary."},{"path":"https://teamworksapp.github.io/smartabaseR/articles/helper-functions.html","id":"sb_get_user","dir":"Articles","previous_headings":"","what":"sb_get_user()","title":"Helper Functions","text":"sb_get_user() leverages Smartabase API get user data Smartabase R session. User data includes identifying information like user ID, , first/last name, username email. include_all_cols option TRUE, extra user information included like phone numbers, addresses, UUIDs groups/roles information. Furthermore, can filter certain users via user_key user_value filters. Note: arguments left empty, data every user access returned. sb_get_user() useful? Recall Smartabase API requires athletes’ user IDs importing Smartabase sb_insert_event() etc. (see vignette(\"importing-data\")). sb_get_user() just one way find athletes’ user IDs use sb_insert_event() rest import functions.","code":""},{"path":[]},{"path":"https://teamworksapp.github.io/smartabaseR/articles/helper-functions.html","id":"user_keyuser_value","dir":"Articles","previous_headings":"sb_get_user() > filter","what":"user_key/user_value","title":"Helper Functions","text":"user_key user_value allow get user data specific Smartabase users. user_key represents user identification method: “”, “user_id”, “username” “email”. filter values must generated relevant helper function. , ’re using sb_get_user() export user data athlete Jamie Anderson, need use sb_get_user_filter() along user_key user_value options: user_key = \"\", data_value accepts full names. See vignette(\"exporting-data\") breakdown possible user_key arguments.","code":"sb_get_user(   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   filter = sb_get_user_filter(     user_key = \"about\",     user_value = \"Jamie Anderson\"   ) )"},{"path":[]},{"path":"https://teamworksapp.github.io/smartabaseR/articles/helper-functions.html","id":"include_all_cols","dir":"Articles","previous_headings":"sb_get_user() > option","what":"include_all_cols","title":"Helper Functions","text":"default, sb_get_user() returns user_id, first_name, last_name, username email, user. However, set include_all_cols TRUE within sb_get_user_option(), dob, middle_name, known_as, sex, phone address also returned. Note: phone address returned lists tibbles. Note #2: single athlete returned payload, group role columns (lists tibbles) also returned. unnest list column, can use unnest() tidyr:","code":"user_data <- sb_get_user(   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   filter = sb_get_user_option(     include_all_cols = TRUE   ) ) user_data #> # A tibble: 1 × 15 #>   user_id about   first_name last_name username email dob   middle_name known_as #>     <dbl> <chr>   <chr>      <chr>     <chr>    <chr> <chr> <chr>       <chr>    #> 1   12000 Jamie … Jamie      Anderson  jamie.a… jami… 01/0… \"\"          \"\"       #> # ℹ 6 more variables: sex <chr>, athlete_group <list>, coach_group <list>, #> #   role <list>, phone <list>, address <list> tidyr::unnest(user_data, athlete_group) #> # A tibble: 2 × 16 #>   user_id about   first_name last_name username email dob   middle_name known_as #>     <dbl> <chr>   <chr>      <chr>     <chr>    <chr> <chr> <chr>       <chr>    #> 1   12000 Jamie … Jamie      Anderson  jamie.a… jami… 01/0… \"\"          \"\"       #> 2   12000 Jamie … Jamie      Anderson  jamie.a… jami… 01/0… \"\"          \"\"       #> # ℹ 7 more variables: sex <chr>, athlete_group_id <dbl>, #> #   athlete_group_name <chr>, coach_group <list>, role <list>, phone <list>, #> #   address <list>"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/helper-functions.html","id":"sb_get_group","dir":"Articles","previous_headings":"","what":"sb_get_group()","title":"Helper Functions","text":"sb_get_group() returns list Smartabase groups available account. ’s arguments username, password url.","code":"sb_get_group(   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\" ) #> # A tibble: 3 × 1 #>   group      #>   <chr>      #> 1 All Users  #> 2 First Team #> 3 Reserves"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/helper-functions.html","id":"sb_select_metadata","dir":"Articles","previous_headings":"","what":"sb_select_metadata()","title":"Helper Functions","text":"data exported Smartabase, often desirable retain metadata variables (e.g. , start_time etc.) data frame importing back Smartabase. helper function look metadata variables present data frame return , opposed needing write write metadata variables names . example:","code":"example_df <- dplyr::tibble(   about = c(\"Jamie Anderson\", \"Charlie Thompson\"),   start_date = c(\"14/02/2023\", \"14/02/2023\"),   form = \"Hydration\",   `Body Weight pre training` = round(runif(2, 82, 92), 0),   `Body Weight post training` = round(runif(2, 82, 92), 0),   `Urine Colour` = round(runif(2, 1, 8), 0),   end_date = c(\"14/02/2023\", \"14/02/2023\") )  example_df %>% dplyr::select(sb_select_metadata(.)) #> # A tibble: 2 × 4 #>   about            start_date form      end_date   #>   <chr>            <chr>      <chr>     <chr>      #> 1 Jamie Anderson   14/02/2023 Hydration 14/02/2023 #> 2 Charlie Thompson 14/02/2023 Hydration 14/02/2023"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/importing-data.html","id":"import-functions","dir":"Articles","previous_headings":"","what":"Import functions","title":"Importing Data","text":"smartabaseR provides four general functions importing data Smartabase: sb_insert_event(), sb_update_event(), sb_upsert_event() sb_upsert_profile().","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/articles/importing-data.html","id":"sb_insert_event","dir":"Articles","previous_headings":"Import functions","what":"sb_insert_event()","title":"Importing Data","text":"‘Inserting’ data Smartabase means creating new events; .e. inserting new rows Smartabase event database. sb_insert_event() commonly used import function ensures chance existing events updated/overwritten.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/articles/importing-data.html","id":"example","dir":"Articles","previous_headings":"Import functions > sb_insert_event()","what":"Example","title":"Importing Data","text":"","code":"training_data <- dplyr::tibble(   start_date = \"13/01/2023\",   user_id = c(37204, 37201),   about = c(\"Aiden Thomas\", \"Jamie Anderson\"),   distance = c(2530, 5411),   rpe = c(5, 7),   entered_by_user_id = c(37204, 37201) )  training_data #> # A tibble: 2 × 6 #>   start_date user_id about          distance   rpe entered_by_user_id #>   <chr>        <dbl> <chr>             <dbl> <dbl>              <dbl> #> 1 13/01/2023   37204 Aiden Thomas       2530     5              37204 #> 2 13/01/2023   37201 Jamie Anderson     5411     7              37201 sb_insert_event(   df = training_data,   form = \"Team Summary\" ) #> ✔ SUCCESSFULLY_INSERTED: 2 out of 2 records successfully inserted into Team Summary."},{"path":"https://teamworksapp.github.io/smartabaseR/articles/importing-data.html","id":"sb_update_event","dir":"Articles","previous_headings":"Import functions","what":"sb_update_event()","title":"Importing Data","text":"‘Updating’ data Smartabase means editing existing events Smartabase event database. sb_update_event() requires valid event_id column supplied data frame. Smartabase-generated unique IDs ensure correct events updated/overwritten.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/articles/importing-data.html","id":"updating-is-the-same-as-overwriting","dir":"Articles","previous_headings":"Import functions > sb_update_event()","what":"Updating is the same as overwriting","title":"Importing Data","text":"Important side note: chose term ‘update’ sb_update_event() aligns standard database terminology, arguably appropriate name sb_overwrite_event(). ’s every event data frame supplied sb_update_event() completely overwrites existing event Smartabase event database. Practically also means calls sb_update_event() preceded call sb_get_event()/sb_sync_event(). latter return data frame contain entire Smartabase form, including every column/field contains data; mention necessary event_id column.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/articles/importing-data.html","id":"example-1","dir":"Articles","previous_headings":"Import functions > sb_update_event()","what":"Example","title":"Importing Data","text":"workflow involves exporting event data Smartabase via sb_get_event(), applying transformation importing results using sb_insert_event(). two records. event IDs 2381840 238203. Notice field Team Average Distance currently empty. Let’s imagine want populate field team’s average distance without creating new records. First, let’s calculation: need now import avg_dist_data data back Training Log form via sb_update_event() Team Average Distance field populated: Running code create screen prompt interact : input “1” “Yes” console ’ll see:","code":"training_data <- sb_get_event(   form = \"Training Log\",   date_range = c(\"15/04/2023\", \"15/04/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\" ) #> # A tibble: 2 × 7 #>   form         start_date user_id event_id Distance   RPE Team Average Distanc…¹ #>   <chr>        <chr>        <dbl>    <dbl>    <dbl> <dbl> <lgl>                  #> 1 Training Log 15/04/2023   37204  2381840     2530     5 NA                     #> 2 Training Log 15/04/2023   37201  2382033     5411     7 NA                     #> # ℹ abbreviated name: ¹​`Team Average Distance` library(dplyr)  avg_dist_data <- training_data %>%   mutate(across(\"Team Average Distance\", ~ round(mean(Distance), 0)))  avg_dist_data #> # A tibble: 2 × 7 #>   form         start_date user_id event_id Distance   RPE Team Average Distanc…¹ #>   <chr>        <chr>        <dbl>    <dbl>    <dbl> <dbl>                  <dbl> #> 1 Training Log 15/04/2023   37204  2381840     2530     5                   3970 #> 2 Training Log 15/04/2023   37201  2382033     5411     7                   3970 #> # ℹ abbreviated name: ¹​`Team Average Distance` sb_update_event(   df = avg_dist_data,   form = \"Training Log\",   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\" ) #>  #> ── WARNING ───────────────────────────────────────────────────────────────────── #> ! You are about to UPDATE 2 records in Training Log. #> ℹ Please be aware the incoming data will overwrite the existing data. #> The Smartabase API will be called once. #> → Are you sure you want to continue? #> 1: Yes #> 2: No #> ✔ SUCCESSFULLY_UPDATED: 2 out of 2 records successfully updated in Training Log."},{"path":"https://teamworksapp.github.io/smartabaseR/articles/importing-data.html","id":"sb_upsert_event","dir":"Articles","previous_headings":"Import functions","what":"sb_upsert_event()","title":"Importing Data","text":"‘Upserting’ data Smartabase means events can either created updated, depending event_id column. Rows valid event IDs update matching rows Smartabase event database, whereas rows event_id inserted new rows Smartabase event database.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/articles/importing-data.html","id":"example-2","dir":"Articles","previous_headings":"Import functions > sb_upsert_event()","what":"Example","title":"Importing Data","text":"example ’ll get training data Smartabase using sb_get_event(). ’ll round Distance values nearest 100 add two rows Distance = 3000. illustrate sb_upsert_event() works, let’s first get event data Smartabase: Let’s say want update data Smartabase Distance field rounded nearest 100: Imagine new Training Log data insert Smartabase. ’s new data: Joining data exported Smartabase new data gives: Note new data athlete 37207 contain event IDs. mean supplying upsert_data frame sb_upsert_event() invoke two API calls: one insert rows event_id = NA another update remaining events:","code":"training_data <- sb_get_event(   form = \"Training Log\",   date_range = c(\"15/04/2023\", \"15/04/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\" ) #> # A tibble: 2 × 6 #>   form         start_date user_id event_id Distance   RPE #>   <chr>        <chr>        <dbl>    <dbl>    <dbl> <dbl> #> 1 Training Log 15/04/2023   37204  2381840     2530     5 #> 2 Training Log 15/04/2023   37201  2382033     5411     7 library(dplyr)  training_data <- training_data %>%   mutate(across(Distance, ~ round(., digits = -2)))  training_data #> # A tibble: 2 × 6 #>   form         start_date user_id event_id Distance   RPE #>   <chr>        <chr>        <dbl>    <dbl>    <dbl> <dbl> #> 1 Training Log 15/04/2023   37204  2381840     2500     5 #> 2 Training Log 15/04/2023   37201  2382033     5400     7 #> # A tibble: 2 × 4 #>   start_date user_id Distance   RPE #>   <chr>        <dbl>    <dbl> <dbl> #> 1 16/04/2023   37207     3000     4 #> 2 16/04/2023   37207     3000     4 upsert_data <- full_join(training_data, extra_data) #> Joining with `by = join_by(start_date, user_id, Distance, RPE)`  upsert_data #> # A tibble: 4 × 6 #>   form         start_date user_id event_id Distance   RPE #>   <chr>        <chr>        <dbl>    <dbl>    <dbl> <dbl> #> 1 Training Log 15/04/2023   37204  2381840     2500     5 #> 2 Training Log 15/04/2023   37201  2382033     5400     7 #> 3 NA           16/04/2023   37207       NA     3000     4 #> 4 NA           16/04/2023   37207       NA     3000     4 sb_upsert_event(   df = upsert_data,   form = \"Training Log\",   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\" ) #>  #> ── WARNING ───────────────────────────────────────────────────────────────────── #> ! You are about to UPDATE 2 records in Training Log. #> ℹ Please be aware the incoming data will overwrite the existing data. #> ℹ You will also INSERT 2 new records. #> The Smartabase API will be called twice. #> → Are you sure you want to continue? #> 1: Yes #> 2: No #> ✔ 1: SUCCESSFULLY_UPDATED: 2 out of 2 records successfully updated in Training Log. #> ✔ 2: SUCCESSFULLY_INSERTED: 2 out of 2 records successfully inserted into updated in Training Log."},{"path":"https://teamworksapp.github.io/smartabaseR/articles/importing-data.html","id":"sb_upsert_profile","dir":"Articles","previous_headings":"Import functions","what":"sb_upsert_profile()","title":"Importing Data","text":"sb_upsert_profile() function importing profile data Smartabase. Profile forms can store one record per athlete therefore every import profile form upsert. , athlete, first time data imported profile form insert, future profile imports updates.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/articles/importing-data.html","id":"example-3","dir":"Articles","previous_headings":"Import functions > sb_upsert_profile()","what":"Example","title":"Importing Data","text":"","code":"example_profile_data <- dplyr::tibble(   start_date = \"13/01/2023\",   user_id = 37204,   about = \"Aiden Thomas\",   Team = \"First Team\",   entered_by_user_id = 37204 )  training_data #> # A tibble: 2 × 6 #>   form         start_date user_id event_id Distance   RPE #>   <chr>        <chr>        <dbl>    <dbl>    <dbl> <dbl> #> 1 Training Log 15/04/2023   37204  2381840     2500     5 #> 2 Training Log 15/04/2023   37201  2382033     5400     7 sb_upsert_profile(   df = example_profile_data,   form = \"Example Profile Form\",   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\" ) #> ✔ SUCCESSFULLY_INSERTED: 1 out of 1 records successfully inserted into Example Profile Form."},{"path":"https://teamworksapp.github.io/smartabaseR/articles/importing-data.html","id":"option","dir":"Articles","previous_headings":"","what":"option","title":"Importing Data","text":"option values must generated relevant helper function. ’re using sb_insert_event() want set table_field = \"Example Table Field\", set table_field = \"Example Table Field\" within sb_get_event_option(). example: import function associated option function: sb_update_event(..., option = sb_update_event_option()) sb_upsert_event..., option = sb_upsert_event_option()) sb_upsert_profile(..., option = sb_upsert_profile_option()) etc… goes detail available option. Note: even though examples reference sb_insert_event(), advice can applied import functions: sb_update_event(), sb_upsert_event() sb_upsert_profile().","code":"sb_get_event(   form = \"Example Form\",   date_range = c(\"01/03/2023\", \"07/03/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   option = sb_insert_event_option(     table_field = \"Example Table Field\"   ) )"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/importing-data.html","id":"cache","dir":"Articles","previous_headings":"option","what":"cache","title":"Importing Data","text":"first time hit Smartabase API within given R session (first time call sb_insert_event(), instance), smartabaseR background first calls sb_login(). cache option set TRUE (default), login object saved memory passed calls Smartabase API. cache option FALSE, subsequent calls Smartabase API preceded call sb_login().","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/articles/importing-data.html","id":"id_col","dir":"Articles","previous_headings":"option","what":"id_col","title":"Importing Data","text":"Whenever import data Smartabase, API requires exists column called user_id data frame. represents athlete’s Smartabase-generated user ID. id_col defaults \"user_id\" reason. However, may situations don’t relevant Smartabase user IDs handy. two approaches : firstly, make call sb_get_user() get user IDs , join event data “user_id”; , secondly, data frame contains kind identifying column like “username”, “email” “” (, full name), can simply set id_col argument name identifying column. instance, id_col = \"\". id_col can either set “username”, “email” “”.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/articles/importing-data.html","id":"example-4","dir":"Articles","previous_headings":"option > id_col","what":"Example","title":"Importing Data","text":"data frame want insert “Training Log” form using sb_insert_event(). Note user_id column, column. call sb_insert_event() set option = sb_insert_event_option(id_col = \"\"): Remember: id_col can set either “user_id”, “”, “username” “email”.","code":"#> # A tibble: 2 × 4 #>   start_date about          Distance   RPE #>   <chr>      <chr>             <dbl> <dbl> #> 1 15/04/2023 Aiden Thomas       2530     5 #> 2 15/04/2023 Jamie Anderson     5411     7 sb_insert_event(   df = training_data,   form = \"Training Log\",   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   option = sb_insert_event_option(     id_col = \"about\"   ) )"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/importing-data.html","id":"table_field","dir":"Articles","previous_headings":"option","what":"table_field","title":"Importing Data","text":"Smartabase tables used want store multiple rows data one event. example, prevalent strength testing forms athlete performing multiple exercises session.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/articles/importing-data.html","id":"example-5","dir":"Articles","previous_headings":"option > table_field","what":"Example","title":"Importing Data","text":"event data form contains table non-table fields: Exercise, Load Repetition table fields, whereas Session RPE – recorded session. start_date, user_id, event_id metadata always populate row. notice unique start_date user_id pairing, non-table field (Session RPE) populate first row. structure required whenever importing forms table non-table fields. user must specify columns map Smartabase table fields via table_field: table_field takes vector column names.","code":"strength_data <- sb_get_event(   form = \"Strength Testing\",   date_range = c(\"15/04/2023\", end_date = \"15/04/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   option = sb_get_event_option(     user_key = \"about\",     user_value = c(\"Aiden Thomas\", \"Jamie Anderson\")   ) ) strength_data #> # A tibble: 6 × 8 #>   start_date user_id about      `Session RPE` Exercise  Load Repetition event_id #>   <chr>        <dbl> <chr>              <dbl> <chr>    <dbl>      <dbl>    <dbl> #> 1 15/04/2023   37204 Aiden Tho…             7 Bench P…   120          3  2381840 #> 2 15/04/2023   37204 Aiden Tho…            NA Bench P…   115          3  2381840 #> 3 15/04/2023   37204 Aiden Tho…            NA Bench P…   110          3  2381840 #> 4 15/04/2023   37201 Jamie And…             8 Back Sq…   170          3  2382033 #> 5 15/04/2023   37201 Jamie And…            NA Back Sq…   165          3  2382033 #> 6 15/04/2023   37201 Jamie And…            NA Back Sq…   185          3  2382033 sb_insert_event(   df = strength_data,   form = \"Strength Testing\",   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   option = sb_insert_event_option(     table_field = c(\"Exercise\", \"Load\", \"Repetition\")   ) )"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/importing-data.html","id":"duplicate-user_idstart_date-when-table_field-null","dir":"Articles","previous_headings":"option > table_field","what":"Duplicate user_id/start_date when table_field = NULL","title":"Importing Data","text":"table_field = NULL duplicate user_id/start_date pairings detected, data set split list data frames. element list, .e., data frame, contains set original data whereby duplicate user_id/start_date values internally. data set list imported via individual API calls. example, let’s say following data set can see, Aiden Thomas two records occurring “15/04/2023” Jamie Anderson three records occurring “15/04/2023”. try import data table_field left empty, sb_insert_event() internally split data like first data set contains first unique user_id/start_date pairing; second data set contains second unique user_id/start_date pairing, .","code":"print(strength_data) #> # A tibble: 6 × 5 #>   start_date user_id about          exercise     load #>   <chr>        <dbl> <chr>          <chr>       <dbl> #> 1 15/04/2023   37201 Jamie Anderson Back Squat    170 #> 2 15/04/2023   37201 Jamie Anderson Back Squat    165 #> 3 15/04/2023   37201 Jamie Anderson Back Squat    165 #> 4 15/04/2023   37204 Aiden Thomas   Bench Press   120 #> 5 15/04/2023   37204 Aiden Thomas   Bench Press   115 #> 6 16/04/2023   37204 Aiden Thomas   Bench Press   110 #> $`1` #> # A tibble: 3 × 5 #>   start_date user_id about          exercise     load #>   <chr>        <dbl> <chr>          <chr>       <dbl> #> 1 15/04/2023   37201 Jamie Anderson Back Squat    170 #> 2 15/04/2023   37204 Aiden Thomas   Bench Press   120 #> 3 16/04/2023   37204 Aiden Thomas   Bench Press   110 #>  #> $`2` #> # A tibble: 2 × 5 #>   start_date user_id about          exercise     load #>   <chr>        <dbl> <chr>          <chr>       <dbl> #> 1 15/04/2023   37201 Jamie Anderson Back Squat    165 #> 2 15/04/2023   37204 Aiden Thomas   Bench Press   115 #>  #> $`3` #> # A tibble: 1 × 5 #>   start_date user_id about          exercise    load #>   <chr>        <dbl> <chr>          <chr>      <dbl> #> 1 15/04/2023   37201 Jamie Anderson Back Squat   165"},{"path":"https://teamworksapp.github.io/smartabaseR/articles/importing-data.html","id":"interactive_mode","dir":"Articles","previous_headings":"option","what":"interactive_mode","title":"Importing Data","text":"interactive_mode = FALSE suppresses progress messages intended human end-users. Set interactive_mode = FALSE running smartabaseR within automated pipelines.","code":""},{"path":[]},{"path":"https://teamworksapp.github.io/smartabaseR/articles/importing-data.html","id":"start_date-end_date-start_time-end_time-columns","dir":"Articles","previous_headings":"Miscellaneous","what":"start_date / end_date / start_time / end_time columns","title":"Importing Data","text":"uploading data Smartabase, API requires metadata event started stopped. sb_insert_event() first search columns data named “start_time” “end_time”. Note: start_time end_time values must h:mm h:mm PM format. columns exist, start_time end_time set current time one hour current time, respectively. Likewise,sb_insert_event() also search columns named “start_date” “end_date”, must values formatted dd/mm/YYYY. columns exist, start_date end_date set current date (unless difference start_time end_time spans midnight, case end_date set current date plus one day).","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zac Pross. Author, maintainer. James Day. Author. Teamworks. Copyright holder, funder.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pross Z, Day J (2025). smartabaseR: R Wrapper Smartabase API. R package version 0.1.0, https://github.com/Teamworksapp/smartabaseR, https://teamworksapp.github.io/smartabaseR/.","code":"@Manual{,   title = {smartabaseR: R Wrapper for the Smartabase API},   author = {Zac Pross and James Day},   year = {2025},   note = {R package version 0.1.0,     https://github.com/Teamworksapp/smartabaseR},   url = {https://teamworksapp.github.io/smartabaseR/}, }"},{"path":"https://teamworksapp.github.io/smartabaseR/index.html","id":"smartabaser-an-r-wrapper-for-the-teamworks-ams-api-formerly-smartabase-api-","dir":"","previous_headings":"","what":"R Wrapper for the Smartabase API","title":"R Wrapper for the Smartabase API","text":"smartabaseR R package lets connect R Teamworks AMS (formerly known Smartabase). core, smartabaseR acts wrapper Teamworks AMS API (formerly known Smartabase API). sb_get_event() returns flat export Teamworks AMS data. can leverage R’s rich data wrangling, statistics machine learning capabilities. sb_insert_event() sends data R Smartabase.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Wrapper for the Smartabase API","text":"Install development version smartabaseR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"Teamworksapp/smartabaseR\")"},{"path":"https://teamworksapp.github.io/smartabaseR/index.html","id":"requirements","dir":"","previous_headings":"","what":"Requirements","title":"R Wrapper for the Smartabase API","text":"smartabaseR can used Smartabase versions 6.14 greater (account superadmin site owner privileges, smartabaseR can also used v6.13). 2023, Smartabase switched calendar versioning. smartabaseR can used site uses calendar versioning e.g. 2023.1, 2023.2 etc. Smartabase email addresses Smartabase usernames interchangeable logging Smartabase via smartabaseR. must always supply valid Smartabase username prompted smartabaseR.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/index.html","id":"security","dir":"","previous_headings":"","what":"Security","title":"R Wrapper for the Smartabase API","text":"smartabaseR respects permissions interacting Smartabase web app Smartabase mobile app. example, don’t access certain form Smartabase, won’t access form via smartabaseR. Likewise, delete access certain form Smartabase, can also delete data form smartabaseR. smartabaseR powerful tool. can level automation analytics processes potential damage : read documentation undertaken extensive testing putting production reached Smartabase consultant /questions /concerns","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/index.html","id":"get-started","dir":"","previous_headings":"","what":"Get started","title":"R Wrapper for the Smartabase API","text":"’s important think provide credentials smartabaseR. can read : vignette(\"credentials\").","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"R Wrapper for the Smartabase API","text":"two main functions smartabaseR allow export/import data /Smartabase site via Smartabase API.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/index.html","id":"sb_get_event","dir":"","previous_headings":"Usage","what":"sb_get_event()","title":"R Wrapper for the Smartabase API","text":"sb_get_event() function allows export data specific Smartabase form R session:","code":"sb_get_event(   form = \"Example Form\",   date_range = c(\"01/03/2023\", \"07/03/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\" )"},{"path":"https://teamworksapp.github.io/smartabaseR/index.html","id":"sb_insert_event","dir":"","previous_headings":"Usage","what":"sb_insert_event()","title":"R Wrapper for the Smartabase API","text":"sb_insert_event() function allows send data back Smartabase form:","code":"sb_insert_event(   df = data,   form = \"Example Form\",   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\" )"},{"path":"https://teamworksapp.github.io/smartabaseR/index.html","id":"further-reading","dir":"","previous_headings":"","what":"Further Reading","title":"R Wrapper for the Smartabase API","text":"Browse vignettes depth details workflow details function: vignette(\"exporting-data\") vignette(\"importing-data\") vignette(\"helper-functions\")","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/get_metadata_names.html","id":null,"dir":"Reference","previous_headings":"","what":"get_metadata_names — get_metadata_names","title":"get_metadata_names — get_metadata_names","text":"get_metadata_names() renamed sb_select_metadata() create consistent API.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/get_metadata_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_metadata_names — get_metadata_names","text":"","code":"get_metadata_names(df)"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/get_metadata_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_metadata_names — get_metadata_names","text":"dataframe","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/print.sb_df.html","id":null,"dir":"Reference","previous_headings":"","what":"print.sb_df — print.sb_df","title":"print.sb_df — print.sb_df","text":"Hides custom attributes attach objects","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/print.sb_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print.sb_df — print.sb_df","text":"","code":"# S3 method for class 'sb_df' print(x, ...)"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/print.sb_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print.sb_df — print.sb_df","text":"x smartabase attributes object ... Reserved future use","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/print.sb_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print.sb_df — print.sb_df","text":"cleaned message","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/pull_smartabase.html","id":null,"dir":"Reference","previous_headings":"","what":"pull_smartabase — pull_smartabase","title":"pull_smartabase — pull_smartabase","text":"pull_smartabase() deprecated favour explicitly named sb_get_event(), sb_get_profile() sb_sync_event(). Please use instead Downloads data Smartabase event profile form function pulls data Smartabase event form profile form using Smartabase API. details see help vignette: vignette(\"pulling-data\")","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/pull_smartabase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pull_smartabase — pull_smartabase","text":"","code":"pull_smartabase(   form,   ...,   url = NULL,   type = \"event\",   download_attachment = FALSE,   start_date = NULL,   end_date = NULL,   last = NULL,   start_time = \"12:00 am\",   end_time = \"11:59 pm\",   username = NULL,   password = NULL,   filter_user_key = NULL,   filter_user_value = NULL,   filter_data_key = NULL,   filter_data_value = NULL,   filter_data_condition = \"equal_to\",   include_missing_user = FALSE,   guess_col_type = TRUE,   get_uuid = FALSE,   cloud_mode = FALSE,   last_sync_time = NULL,   shiny_progress_code = NULL,   dev_mode = FALSE )"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/pull_smartabase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pull_smartabase — pull_smartabase","text":"form string: name Smartabase form url string: Smartabase url e.g. 'example.smartabase.com/site' type string: either 'event', 'profile' 'synchronise' download_attachment boolean: TRUE, download files included form via file upload/multiple file upload field start_date string: 'dd/mm/yyyy' end_date string: 'dd/mm/yyyy' username string: Smartabase username – ignore setup save_credentials() password string: Smartabase password – ignore setup save_credentials()","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/pull_smartabase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pull_smartabase — pull_smartabase","text":"Smartabase data","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/pull_smartabase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"pull_smartabase — pull_smartabase","text":"","code":"if (FALSE) { # \\dontrun{ # Get one week of wellness data from example.smartabase.com/site: wellness_data <- pull_smartabase(   url = \"example.smartabase.com/site\",   form = \"Daily Wellness\",   username = \"john.smith\",   password = \"examplePassword\",   start_date = \"15/04/2019\",   end_date = \"22/04/2019\" ) } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/push_smartabase.html","id":null,"dir":"Reference","previous_headings":"","what":"push_smartabase — push_smartabase","title":"push_smartabase — push_smartabase","text":"push_smartabase() deprecated favour explicitly named sb_insert_event(), sb_update_event(), sb_update_profile() sb_upsert_event(). Please use instead. Uploads data frame Smartabase event profile form push_smartabase() function uses Smartabase API imports R data frame specific Smartabase event profile form. Set 'type' = \"profile\" push profile form. details see help vignette: vignette(\"get-started\")","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/push_smartabase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"push_smartabase — push_smartabase","text":"","code":"push_smartabase(   df,   form,   ...,   url = NULL,   username = NULL,   password = NULL,   entered_by_user_id = NULL,   type = \"event\",   get_id = FALSE,   match_id_to_column = NULL,   table_fields = NULL,   start_date = NULL,   end_date = NULL,   current_date_format = NULL,   start_time = NULL,   end_time = NULL,   edit_event = FALSE,   cloud_mode = FALSE,   shiny_progress_code = NULL,   cache = TRUE )"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/push_smartabase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"push_smartabase — push_smartabase","text":"df data frame: data uploaded Smartabase form string: Name Smartabase form url string: Smartabase url e.g. 'example.smartabase.com/site' username string: Smartabase username – ignore setup save_credentials() password string: Smartabase password – ignore setup save_credentials() entered_by_user_id string: user ID user uploading data – ignore setup save_credentials() type string: either 'event' 'profile' get_id boolean: TRUE, searches user IDs athletes listed data frame (requires value supplied 'match_id_to_column') match_id_to_column string: names columns data frame match either '', 'username' 'email'. User IDs returned match data frame values. Requires 'get_id' = TRUE table_fields vector: supply vector column names going uploaded table. Smartabase, equivalent ticking 'Treat records user, day single record?' start_date string: name start date column data frame. NULL, 'Date' 'start_date' already columns data frame, creates new start_date column based current date end_date string: name end date column data frame. NULL, 'end_date' already column data frame, creates new 'end_date' column based 'start_date' current_date_format string: current format date variable interest. Set argument convert 'start_date' 'end_date' dd/mm/yyyy start_time string: name start time column data frame 'h:mm ' 'h:mm PM' records. NULL, 'start_time' already column data frame, creates new 'start_time' column based Sys.time() end_time string: name end time column data frame 'h:mm ' 'h:mm PM' records. NULL, 'end_time' already column data frame, creates new 'end_time' column values +1 hour 'start_time' edit_event boolean: TRUE, look 'event_id' data frame. Records matching event_id Smartabase overwritten new data cloud_mode boolean: TRUE, confirmation pop-appear editing events (.e. use non-local, cloud environments)","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/push_smartabase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"push_smartabase — push_smartabase","text":"data frame","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/save_credentials.html","id":null,"dir":"Reference","previous_headings":"","what":"save_credentials — save_credentials","title":"save_credentials — save_credentials","text":"Helper opens .Renviron file storing credentials. Deprecated: used support deprecated exported functions like pull_smartabase() push_smartabase()","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/save_credentials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"save_credentials — save_credentials","text":"","code":"save_credentials()"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/save_credentials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"save_credentials — save_credentials","text":".Renviron","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/save_credentials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"save_credentials — save_credentials","text":"","code":"if (FALSE) { # \\dontrun{ save_credentials() } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_date_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a date range relative to a supplied end date. — sb_date_range","title":"Generates a date range relative to a supplied end date. — sb_date_range","text":"function generates date range based specified duration relative supplied end date, default end date today's date. returns vector length two containing start date end date \"dd/mm/YYYY\" strings. details see help vignette: vignette(\"exporting-data\")","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_date_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a date range relative to a supplied end date. — sb_date_range","text":"","code":"sb_date_range(   duration_value,   duration_unit = c(\"days\", \"weeks\", \"months\", \"years\"),   end_date = format(lubridate::today(), \"%d/%m/%Y\") )"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_date_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a date range relative to a supplied end date. — sb_date_range","text":"duration_value Number days, weeks, months years end date. duration_unit Either \"days\", \"weeks\", \"months\" \"years\". Defaults \"days\". end_date Must string \"dd/mm/YYYY\" format. Defaults today's date.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_date_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a date range relative to a supplied end date. — sb_date_range","text":"vector containing start date end date strings \"dd/mm/YYYY\" format.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_date_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a date range relative to a supplied end date. — sb_date_range","text":"","code":"if (FALSE) { # \\dontrun{ # Generate date range for the last 7 days sb_date_range(duration_value = \"7\", duration_unit = \"days\")  # Generate date range for one year ending on \"01/06/2023\" sb_date_range(\"1\", \"years\", end_date = \"01/06/2023\") } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_delete_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Export event data — sb_delete_event","title":"Export event data — sb_delete_event","text":"sb_delete_event() deletes data Smartabase event form using Smartabase API. requires user input valid Smartabase event ID, url credentials. Please see vignette(\"deleting-data\") details.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_delete_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export event data — sb_delete_event","text":"","code":"sb_delete_event(   event_id,   url,   username,   password,   ...,   option = sb_delete_event_option() )"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_delete_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export event data — sb_delete_event","text":"event_id IDs Smartabase events deleted url Smartabase url e.g. \"example.smartabase.com/site\" username Smartabase username password Smartabase password ... dots future extensions must empty option options accessible via sb_delete_event_option() object","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_delete_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export event data — sb_delete_event","text":"Success/fail message","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_delete_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export event data — sb_delete_event","text":"","code":"if (FALSE) { # \\dontrun{ # Delete one record with event_id = 999 from example.smartabase.com/site: sb_delete_event(   event_id = 999,   url = \"example.smartabase.com/site\",   username = \"john.smith\",   password = \"examplePassword\" ) } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_delete_event_option.html","id":null,"dir":"Reference","previous_headings":"","what":"Set option parameters for sb_delete_event() — sb_delete_event_option","title":"Set option parameters for sb_delete_event() — sb_delete_event_option","text":"Set option parameters sb_delete_event()","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_delete_event_option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set option parameters for sb_delete_event() — sb_delete_event_option","text":"","code":"sb_delete_event_option(interactive_mode = TRUE)"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_delete_event_option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set option parameters for sb_delete_event() — sb_delete_event_option","text":"interactive_mode TRUE, messages printed console. FALSE, suppressed. idea interactive_mode set FALSE automated environments ensure logs clogged progress messages.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_delete_event_option.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set option parameters for sb_delete_event() — sb_delete_event_option","text":"list options class = \"sb_delete_option\"","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_delete_event_option.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set option parameters for sb_delete_event() — sb_delete_event_option","text":"","code":"if (FALSE) { # \\dontrun{ # Calling the function with no arguments returns all the defaults sb_delete_event_option()  # Specifying specific arguments will alter those arguments alone while still # returning the other defaults sb_get_group_option(guess_col_type = FALSE, interactive_mode = FALSE) } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Export event data — sb_get_event","title":"Export event data — sb_get_event","text":"sb_get_event() exports data Smartabase event form using Smartabase API. requires user input valid Smartabase event form name, date range, url credentials. details see help vignette: vignette(\"exporting-data\")","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export event data — sb_get_event","text":"","code":"sb_get_event(   form,   date_range,   url,   username,   password,   ...,   filter = sb_get_event_filter(),   option = sb_get_event_option(),   time_range = c(\"12:00 am\", \"11:59 pm\") )"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export event data — sb_get_event","text":"form Name Smartabase event form date_range Character vector length two containing valid start_date end_date (dd/mm/YYYY) character values url Smartabase url e.g. \"example.smartabase.com/site\" username Smartabase username password Smartabase password ... dots future extensions must empty filter filters accessible via sb_get_event_filter() object option options accessible via sb_get_event_option() object time_range Vector length two containing valid start_time end_time (h:mm /pm) character values. Defaults c(\"12:00 \", \"11:59 pm).","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export event data — sb_get_event","text":"tibble containing Smartabase event data","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_event.html","id":"date-range","dir":"Reference","previous_headings":"","what":"date_range","title":"Export event data — sb_get_event","text":"sb_get_event() returns events occur start date end date. must supply dates via date_range argument accepts vector length two. first element start date second element end date. dates must character types represented \"dd/mm/YYYY\" format. Alternatively can use sb_date_range() function generate date range dynamically. See sb_date_range() details.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_event.html","id":"filter","dir":"Reference","previous_headings":"","what":"filter","title":"Export event data — sb_get_event","text":"also range extra filters can supplied filter argument, including user filters, data filters filters getting recent events. order reduce argument clutter sb_get_event(), optional filters must generated sb_get_event_filter() function.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_event.html","id":"time-range","dir":"Reference","previous_headings":"","what":"time_range","title":"Export event data — sb_get_event","text":"well requiring date range export events, sb_get_event() also optionally allows specification valid time range. Similar date_range, time_range length 2 character vector. first element start time second element end time. times must character types represented \"h:mm /pm\" format. Defaults c(\"12:00 \", \"11:59 pm\").","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_event.html","id":"option","dir":"Reference","previous_headings":"","what":"option","title":"Export event data — sb_get_event","text":"also range extra options can supplied option argument, including options downloading attachments suppressing messages console, among others.  order reduce argument clutter sb_get_event(), options must generated sb_get_event_option() function.","code":""},{"path":[]},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export event data — sb_get_event","text":"","code":"if (FALSE) { # \\dontrun{ # Get one week of wellness data from 'example.smartabase.com/site': sb_get_event(   form = \"Daily Wellness\",   date_range = c(\"15/04/2023\", \"22/04/2023\"),   url = \"example.smartabase.com/site\",   username = \"example.user\",   password = \"example_password\" )  # Now retrieve data for the last 7 days using [sb_date_range()], # then, using [sb_get_event_filter()], filter for users in the Smartabase # group \"example_group\" and only return values where \"example_field\" is # greater than 1. Also download any attachments if they're available using # [sb_get_event_option()]. sb_get_event(   form = \"Daily Wellness\",   date_range = sb_date_range(\"7\", \"days\"),   url = \"example.smartabase.com/site\",   username = \"example.user\",   password = \"example_password\",   filter = sb_get_event_filter(     user_key = \"group\",     user_value = \"example_group\",     data_key = \"example_field\",     data_value = 1,     data_condition = \"greater_than\"   ),   option = sb_get_event_option(     download_attachment = TRUE   ) ) } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_event_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Set filter parameters for sb_get_event() — sb_get_event_filter","title":"Set filter parameters for sb_get_event() — sb_get_event_filter","text":"Set filter parameters sb_get_event()","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_event_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set filter parameters for sb_get_event() — sb_get_event_filter","text":"","code":"sb_get_event_filter(   user_key = NULL,   user_value = NULL,   data_key = NULL,   data_value = NULL,   data_condition = \"equal_to\",   events_per_user = NULL )"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_event_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set filter parameters for sb_get_event() — sb_get_event_filter","text":"user_key type user variable filter . possible values c(\"\", \"username\", \"email\", \"group\", \"current_group\"). user_value specific user value filter e.g. user_key = \"username\", perhaps user_value = \"john.smith\". data_key name Smartabase field filter . data_value specific value filter selected data key data_condition Specify condition want apply filtering .e. \"equal_to\", \"not_equal_to\", \"contains\", \"less_than\", \"greater_than\", \"less_than_or_equal_to\", \"greater_than_or_equal_to\". events_per_user maximum number events return per athlete, ordered recent. specified set NULL, events retrieved athlete","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_event_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set filter parameters for sb_get_event() — sb_get_event_filter","text":"list filters class = \"sb_export_filter\"","code":""},{"path":[]},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_event_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set filter parameters for sb_get_event() — sb_get_event_filter","text":"","code":"if (FALSE) { # \\dontrun{ # Calling the function with no arguments returns all the defaults sb_get_event_filter()  # Specifying specific arguments will alter those arguments alone while still # returning the other defaults sb_get_event_filter(user_key = \"group\", user_value = \"Example Group\") } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_event_option.html","id":null,"dir":"Reference","previous_headings":"","what":"Set option parameters for sb_get_event() — sb_get_event_option","title":"Set option parameters for sb_get_event() — sb_get_event_option","text":"Set option parameters sb_get_event()","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_event_option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set option parameters for sb_get_event() — sb_get_event_option","text":"","code":"sb_get_event_option(   interactive_mode = TRUE,   include_user_data = TRUE,   cache = TRUE,   download_attachment = FALSE,   include_missing_user = FALSE,   guess_col_type = TRUE,   include_uuid = FALSE )"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_event_option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set option parameters for sb_get_event() — sb_get_event_option","text":"interactive_mode TRUE, messages printed console. FALSE, suppressed. idea interactive_mode set FALSE automated environments ensure logs clogged progress messages. include_user_data TRUE, information like athlete's full name (.e. ) attached exported data frame. Setting FALSE can improve query performance since sb_get_event() need make extra API call grab user data. cache TRUE, login token user details cached per session. Similar include_user_data, caching can performance benefits user data set large, large Smartabase sites thousands users. invalidate cache, restart R session. download_attachment TRUE, download files included form via file upload field. include_missing_user TRUE, includes users recorded data form rows NA values. guess_col_type TRUE, sb_get_event() uses readr::type_convert() guess column types exported data frame. FALSE, columns come character. include_uuid TRUE, athlete's user-defined UUID (universally unique identifier) attached exported data frame. Note, different user_id, automatically generated Smartabase.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_event_option.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set option parameters for sb_get_event() — sb_get_event_option","text":"list options class = \"sb_export_option\"","code":""},{"path":[]},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_event_option.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set option parameters for sb_get_event() — sb_get_event_option","text":"","code":"if (FALSE) { # \\dontrun{ # Calling the function with no arguments returns all the defaults sb_get_event_option()  # Specifying specific arguments will alter those arguments alone while still # returning the other defaults sb_get_event_option(guess_col_type = FALSE, interactive_mode = FALSE) } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Smartabase group data — sb_get_group","title":"Export Smartabase group data — sb_get_group","text":"function uses Smartabase API export names Smartabase groups logged user access . details see help vignette: vignette(\"helper-functions\")","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Smartabase group data — sb_get_group","text":"","code":"sb_get_group(url, username, password, ..., option = sb_get_group_option())"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Smartabase group data — sb_get_group","text":"url Smartabase url; e.g. 'example.smartabase.com/site' username Smartabase username password Smartabase password ... dots future extensions must empty option options generated sb_get_user_option() object","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Smartabase group data — sb_get_group","text":"tibble containing Smartabase group data","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_group.html","id":"options","dir":"Reference","previous_headings":"","what":"Options","title":"Export Smartabase group data — sb_get_group","text":"also range extra options can supplied option argument. order reduce argument clutter sb_get_group(), options must generated sb_get_group_option() function. Please see sb_get_group_option() details.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export Smartabase group data — sb_get_group","text":"","code":"if (FALSE) { # \\dontrun{ # Get user ID data: group_data <- sb_get_group(   url = \"example.smartabase.com/site\",   username = \"example.user\",   password = \"examplePassword\" ) } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_group_option.html","id":null,"dir":"Reference","previous_headings":"","what":"Set option parameters for sb_get_group() — sb_get_group_option","title":"Set option parameters for sb_get_group() — sb_get_group_option","text":"Set option parameters sb_get_group()","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_group_option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set option parameters for sb_get_group() — sb_get_group_option","text":"","code":"sb_get_group_option(guess_col_type = TRUE, interactive_mode = TRUE)"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_group_option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set option parameters for sb_get_group() — sb_get_group_option","text":"guess_col_type TRUE, sb_get_event() uses readr::type_convert() guess column types exported data frame. FALSE, columns come character. interactive_mode TRUE, messages printed console. FALSE, suppressed. idea interactive_mode set FALSE automated environments ensure logs clogged progress messages.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_group_option.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set option parameters for sb_get_group() — sb_get_group_option","text":"list options class = \"sb_export_option\"","code":""},{"path":[]},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_group_option.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set option parameters for sb_get_group() — sb_get_group_option","text":"","code":"if (FALSE) { # \\dontrun{ # Calling the function with no arguments returns all the defaults sb_get_group_option()  # Specifying specific arguments will alter those arguments alone while still # returning the other defaults sb_get_group_option(guess_col_type = FALSE, interactive_mode = FALSE) } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Export data from a Smartabase profile form — sb_get_profile","title":"Export data from a Smartabase profile form — sb_get_profile","text":"function exports data Smartabase profile form using Smartabase API. requires user input valid Smartabase event form name, url credentials. details see help vignette: vignette(\"exporting-data\")","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export data from a Smartabase profile form — sb_get_profile","text":"","code":"sb_get_profile(   form,   url,   username,   password,   ...,   filter = sb_get_profile_filter(),   option = sb_get_profile_option() )"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export data from a Smartabase profile form — sb_get_profile","text":"form Name Smartabase profile form url Smartabase url e.g. \"example.smartabase.com/site\" username Smartabase username password Smartabase password ... dots future extensions must empty filter filters accessible via sb_get_profile_filter() option options accessible via sb_get_profile_option()","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export data from a Smartabase profile form — sb_get_profile","text":"tibble: Smartabase profile data","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_profile.html","id":"filters","dir":"Reference","previous_headings":"","what":"Filters","title":"Export data from a Smartabase profile form — sb_get_profile","text":"also range extra filters can supplied filter argument. order reduce argument clutter sb_get_profile(), optional filters must generated sb_get_profile_filter() function. Please see sb_get_profile_filter() details.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_profile.html","id":"options","dir":"Reference","previous_headings":"","what":"Options","title":"Export data from a Smartabase profile form — sb_get_profile","text":"also range extra options can supplied option argument. order reduce argument clutter sb_get_profile(), options must generated sb_get_profile_option() function. Please see sb_get_profile_option() details.","code":""},{"path":[]},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_profile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export data from a Smartabase profile form — sb_get_profile","text":"","code":"if (FALSE) { # \\dontrun{ # Get profile data from \"Athlete Profile\" form: sb_get_profile(   form = \"Athlete Profile\",   url = \"example.smartabase.com/site\",   username = \"example.user\",   password = \"examplePassword\" ) } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_profile_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Set filter parameters for sb_get_profile() — sb_get_profile_filter","title":"Set filter parameters for sb_get_profile() — sb_get_profile_filter","text":"Set filter parameters sb_get_profile()","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_profile_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set filter parameters for sb_get_profile() — sb_get_profile_filter","text":"","code":"sb_get_profile_filter(user_key = NULL, user_value = NULL)"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_profile_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set filter parameters for sb_get_profile() — sb_get_profile_filter","text":"user_key type user variable filter . possible values c(\"\", \"username\", \"email\", \"group\", \"current_group\"). user_value specific user value filter e.g. user_key = \"username\", perhaps user_value = \"john.smith\".","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_profile_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set filter parameters for sb_get_profile() — sb_get_profile_filter","text":"list filters class = \"sb_export_filter\"","code":""},{"path":[]},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_profile_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set filter parameters for sb_get_profile() — sb_get_profile_filter","text":"","code":"if (FALSE) { # \\dontrun{ # Calling the function with no arguments returns all the defaults sb_get_profile_filter()  # Specifying specific arguments will alter those arguments alone while still # returning the other defaults sb_get_profile_filter(user_key = \"group\", user_value = \"Example Group\") } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_profile_option.html","id":null,"dir":"Reference","previous_headings":"","what":"Set option parameters for sb_get_profile() — sb_get_profile_option","title":"Set option parameters for sb_get_profile() — sb_get_profile_option","text":"Set option parameters sb_get_profile()","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_profile_option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set option parameters for sb_get_profile() — sb_get_profile_option","text":"","code":"sb_get_profile_option(   interactive_mode = TRUE,   include_user_data = TRUE,   cache = TRUE,   include_missing_user = FALSE,   guess_col_type = TRUE,   include_uuid = FALSE )"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_profile_option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set option parameters for sb_get_profile() — sb_get_profile_option","text":"interactive_mode TRUE, messages printed console. FALSE, suppressed. idea interactive_mode set FALSE automated environments ensure logs clogged progress messages. include_user_data TRUE, information like athlete's full name (.e. ) attached exported data frame. Setting FALSE can improve query performance since sb_get_event() need make extra API call grab user data. cache TRUE, login token user details cached per session. Similar include_user_data, caching can performance benefits user data set large, large Smartabase sites thousands users. invalidate cache, restart R session. include_missing_user TRUE, includes users recorded data form rows NA values. guess_col_type TRUE, sb_get_event() uses readr::type_convert() guess column types exported data frame. FALSE, columns come character. include_uuid TRUE, athlete's user-defined UUID (universally unique identifier) attached exported data frame. Note, different user_id, automatically generated Smartabase.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_profile_option.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set option parameters for sb_get_profile() — sb_get_profile_option","text":"list options class = \"sb_export_option\"","code":""},{"path":[]},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_profile_option.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set option parameters for sb_get_profile() — sb_get_profile_option","text":"","code":"if (FALSE) { # \\dontrun{ # Calling the function with no arguments returns all the defaults sb_get_profile_option()  # Specifying specific arguments will alter those arguments alone while still # returning the other defaults sb_get_profile_option(guess_col_type = FALSE, interactive_mode = FALSE) } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Smartabase user data — sb_get_user","title":"Export Smartabase user data — sb_get_user","text":"sb_get_user() exports user data using Smartabase API. requires user input valid Smartabase url valid Smartabase credentials. details see help vignette: vignette(\"helper-functions\")","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Smartabase user data — sb_get_user","text":"","code":"sb_get_user(   url,   username,   password,   ...,   filter = sb_get_user_filter(),   option = sb_get_user_option() )"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Smartabase user data — sb_get_user","text":"url Smartabase url; e.g. 'example.smartabase.com/site' username Smartabase username password Smartabase password ... dots future extensions must empty filter filters generated sb_get_user_filter() object option options generated sb_get_user_option() object","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Smartabase user data — sb_get_user","text":"tibble containing Smartabase user data","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_user.html","id":"filters","dir":"Reference","previous_headings":"","what":"Filters","title":"Export Smartabase user data — sb_get_user","text":"also range extra filters can supplied filter argument. order reduce argument clutter sb_get_user(), optional filters must generated sb_get_user_filter() function. Please see sb_get_user_filter() details.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_user.html","id":"options","dir":"Reference","previous_headings":"","what":"Options","title":"Export Smartabase user data — sb_get_user","text":"also range extra options can supplied option argument. order reduce argument clutter sb_get_user(), options must generated sb_get_user_option() function. Please see sb_get_user_option() details.","code":""},{"path":[]},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_user.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export Smartabase user data — sb_get_user","text":"","code":"if (FALSE) { # \\dontrun{ # Get user ID data about Jamie Anderson: user_data <- sb_get_user(   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   filter = sb_get_event_filter(     user_key = \"about\",     user_value = \"Jamie Anderson\"   ) )  # Return all user columns: user_data <- sb_get_user(   url = \"example.smartabase.com/site\",   username = \"example.username\",   password = \"example_password\",   option = sb_get_user_option(     include_all_cols = TRUE   ) ) } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_user_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Set filter parameters for sb_get_profile() — sb_get_user_filter","title":"Set filter parameters for sb_get_profile() — sb_get_user_filter","text":"Set filter parameters sb_get_profile()","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_user_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set filter parameters for sb_get_profile() — sb_get_user_filter","text":"","code":"sb_get_user_filter(user_key = NULL, user_value = NULL)"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_user_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set filter parameters for sb_get_profile() — sb_get_user_filter","text":"user_key type user variable filter . possible values c(\"\", \"username\", \"email\", \"group\", \"current_group\"). user_value specific user value filter e.g. user_key = \"username\", perhaps user_value = \"john.smith\".","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_user_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set filter parameters for sb_get_profile() — sb_get_user_filter","text":"list filters class = \"sb_export_filter\"","code":""},{"path":[]},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_user_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set filter parameters for sb_get_profile() — sb_get_user_filter","text":"","code":"if (FALSE) { # \\dontrun{ # Calling the function with no arguments returns all the defaults sb_get_user_filter()  # Specifying specific arguments will alter those arguments alone while still # returning the other defaults sb_get_user_filter(user_key = \"group\", user_value = \"Example Group\") } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_user_option.html","id":null,"dir":"Reference","previous_headings":"","what":"Set option parameters for sb_get_event() — sb_get_user_option","title":"Set option parameters for sb_get_event() — sb_get_user_option","text":"Set option parameters sb_get_event()","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_user_option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set option parameters for sb_get_event() — sb_get_user_option","text":"","code":"sb_get_user_option(   interactive_mode = TRUE,   include_all_cols = FALSE,   cache = TRUE,   include_missing_user = FALSE,   guess_col_type = TRUE )"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_user_option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set option parameters for sb_get_event() — sb_get_user_option","text":"interactive_mode TRUE, messages printed console. FALSE, suppressed. idea interactive_mode set FALSE automated environments ensure logs clogged progress messages. include_all_cols FALSE, basic user information included returned data frame; e.g. user_id, username, etc. TRUE, extra user information like phone, address date birth also returned. one user returned, roles groups information user included. cache TRUE, login token user details cached per session. Similar include_user_data, caching can performance benefits user data set large, large Smartabase sites thousands users. invalidate cache, restart R session. include_missing_user TRUE, includes users recorded data form rows NA values. guess_col_type TRUE, sb_get_event() uses readr::type_convert() guess column types exported data frame. FALSE, columns come character.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_user_option.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set option parameters for sb_get_event() — sb_get_user_option","text":"list options class = \"sb_export_option\"","code":""},{"path":[]},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_get_user_option.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set option parameters for sb_get_event() — sb_get_user_option","text":"","code":"if (FALSE) { # \\dontrun{ # Calling the function with no arguments returns all the defaults sb_get_user_option()  # Specifying specific arguments will alter those arguments alone while still # returning the other defaults sb_get_user_option(guess_col_type = FALSE, interactive_mode = FALSE) } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_insert_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert event data — sb_insert_event","title":"Insert event data — sb_insert_event","text":"sb_insert_event() imports data frame Smartabase event form using Smartabase API. requires user input data frame, valid Smartabase event form name, url credentials. details see help vignette: vignette(\"exporting-data\")","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_insert_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert event data — sb_insert_event","text":"","code":"sb_insert_event(   df,   form,   url,   username,   password,   ...,   option = sb_insert_event_option() )"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_insert_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert event data — sb_insert_event","text":"df Data imported Smartabase form Name Smartabase event form url Smartabase url e.g. \"example.smartabase.com/site\" username Smartabase username password Smartabase password ... dots future extensions must empty option options accessible via sb_insert_event_option() object","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_insert_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert event data — sb_insert_event","text":"Data frame extra details import status","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_insert_event.html","id":"start-date-end-date-start-time-end-time-columns","dir":"Reference","previous_headings":"","what":"start_date / end_date / start_time / end_time columns","title":"Insert event data — sb_insert_event","text":"uploading data Smartabase, API requires metadata event started stopped. sb_insert_event() first search columns data named \"start_time\" \"end_time\", must values h:mm h:mm PM format. columns exist, start_time end_time set current time one hour current time, respectively. Likewise, sb_insert_event() also search columns named \"start_date\" \"end_date\", must values formatted dd/mm/YYYY. columns exist, start_date end_date set current date (unless difference start_time end_time spans midnight, case end_date set current date plus one day).","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_insert_event.html","id":"options","dir":"Reference","previous_headings":"","what":"Options","title":"Insert event data — sb_insert_event","text":"also range extra options can supplied option argument, including options setting different ID column supplying names table fields, among others.  order reduce argument clutter sb_insert_event(), options must generated sb_insert_event_option() function. Please see sb_insert_event_option() details.","code":""},{"path":[]},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_insert_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert event data — sb_insert_event","text":"","code":"if (FALSE) { # \\dontrun{ example_df <- dplyr::tibble(   user_id = c(31813, 31819),   `Body Weight pre training` = round(runif(2, 82, 92), 0),   `Body Weight post training` = round(runif(2, 82, 92), 0),   `Urine Colour` = round(runif(2, 1, 8), 0) ) sb_insert_event(   df = example_df,   form = \"Hydration\",   url = \"example.smartabase.com/site\",   username = \"john.smith\",   password = \"example_password\" ) } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_insert_event_option.html","id":null,"dir":"Reference","previous_headings":"","what":"Set option parameters for sb_insert_event() — sb_insert_event_option","title":"Set option parameters for sb_insert_event() — sb_insert_event_option","text":"Set option parameters sb_insert_event()","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_insert_event_option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set option parameters for sb_insert_event() — sb_insert_event_option","text":"","code":"sb_insert_event_option(   interactive_mode = TRUE,   id_col = c(\"user_id\", \"about\", \"username\", \"email\"),   table_field = NULL,   cache = TRUE )"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_insert_event_option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set option parameters for sb_insert_event() — sb_insert_event_option","text":"interactive_mode TRUE, messages printed console. FALSE, suppressed. idea interactive_mode set FALSE ensure logs clogged progress messages automated environments. id_col Name column smartabaseR use user identifier. default Smartabase API requires \"user_id\" column, possible values \"\", \"username\" \"email\". table_field Smartabase tables used want store multiple rows data one event. importing data form contains table fields, must manually supply names fields character vector table_field argument within relevant import option helper function. equivalent ticking 'Treat records user, day single record?' Smartabase web app. cache TRUE, login token user details cached per session. invalidate cache, restart R session.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_insert_event_option.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set option parameters for sb_insert_event() — sb_insert_event_option","text":"list options class = \"sb_import_option\"","code":""},{"path":[]},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_insert_event_option.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set option parameters for sb_insert_event() — sb_insert_event_option","text":"","code":"if (FALSE) { # \\dontrun{ # Calling the function with no arguments returns all the defaults sb_insert_event_option()  # Specifying specific arguments will alter those arguments alone while still # returning the other defaults sb_insert_event_option(   id_col = \"about\",   table_field = c(\"Example Table Field Name\") ) } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_login.html","id":null,"dir":"Reference","previous_headings":"","what":"Log into Smartabase using credentials — sb_login","title":"Log into Smartabase using credentials — sb_login","text":"smartabaseR uses function internally log user start R session. exported function since can also useful troubleshooting ensure credentials indeed valid.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_login.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log into Smartabase using credentials — sb_login","text":"","code":"sb_login(url, username, password, ..., option = sb_login_option())"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_login.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log into Smartabase using credentials — sb_login","text":"url Smartabase url e.g. \"example.smartabase.com/site\" username Smartabase username password Smartabase password ... dots future extensions must empty option options accessible via sb_login_option() object calling sb_login()","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_login.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log into Smartabase using credentials — sb_login","text":"login object","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_login.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log into Smartabase using credentials — sb_login","text":"","code":"if (FALSE) { # \\dontrun{ sb_login(   url = \"example.smartabase.com/site\",   username = \"john.smith\",   password = \"example_password\" ) } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_login_option.html","id":null,"dir":"Reference","previous_headings":"","what":"sb_login_option — sb_login_option","title":"sb_login_option — sb_login_option","text":"Exports data Smartabase event form","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_login_option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sb_login_option — sb_login_option","text":"","code":"sb_login_option(interactive_mode = TRUE)"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_login_option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sb_login_option — sb_login_option","text":"interactive_mode TRUE, messages printed console. FALSE, suppressed. idea interactive_mode set FALSE automated environments ensure logs clogged progress messages.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_login_option.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sb_login_option — sb_login_option","text":"list named export options","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_select_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"sb_select_metadata — sb_select_metadata","title":"sb_select_metadata — sb_select_metadata","text":"Returns vector metadata variables present data frame","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_select_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sb_select_metadata — sb_select_metadata","text":"","code":"sb_select_metadata(df)"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_select_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sb_select_metadata — sb_select_metadata","text":"df data frame: data uploaded Smartabase","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_select_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sb_select_metadata — sb_select_metadata","text":"Vector metadata variable names","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_select_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sb_select_metadata — sb_select_metadata","text":"data pulled Smartabase, often desirable retain metadata variables (e.g. , start_time etc.) data frame pushing back Smartabase. Rather repeatedly write vector metadata variables want retain, helper function retain metadata variables present data frame; instance, used select() function","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_select_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sb_select_metadata — sb_select_metadata","text":"","code":"if (FALSE) { # \\dontrun{ example_df <- dplyr::tibble(   about = c(\"Jamie Anderson\", \"Charlie Thompson\"),   start_date = c(\"14/02/2020\", \"14/02/2020\"),   form = \"Hydration\",   `Body Weight pre training` = round(runif(2, 82, 92), 0),   `Body Weight post training` = round(runif(2, 82, 92), 0),   `Urine Colour` = round(runif(2, 1, 8), 0),   end_date = c(\"14/02/2020\", \"14/02/2020\") ) example_df %>% select(sb_select_metadata(.)) select(example_df, sb_select_metadata(example_df)) } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_sync_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Export modified event data since the last synchronisation time — sb_sync_event","title":"Export modified event data since the last synchronisation time — sb_sync_event","text":"sb_sync_event() exports data Smartabase event form using Smartabase API. user must supply timestamp unix format (.e. milliseconds since 1970-01-01) sb_sync_event() return event data inserted updated since time. sb_sync_event() also attaches new_sync_time attribute returned tibble. attribute can stripped tibble fed subsequent call sb_sync_event() via last_sync_time argument.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_sync_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export modified event data since the last synchronisation time — sb_sync_event","text":"","code":"sb_sync_event(   form,   last_sync_time,   url,   username,   password,   ...,   filter = sb_sync_event_filter(),   option = sb_sync_event_option() )"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_sync_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export modified event data since the last synchronisation time — sb_sync_event","text":"form Name Smartabase event form last_sync_time UNIX time (time milliseconds since 1970-01-01) integer url Smartabase url e.g. \"example.smartabase.com/site\" username Smartabase username password Smartabase password ... dots future extensions must empty filter filters accessible via sb_sync_event_filter() object option options accessible via sb_sync_event_option() object","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_sync_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export modified event data since the last synchronisation time — sb_sync_event","text":"tibble containing Smartabase event data","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_sync_event.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export modified event data since the last synchronisation time — sb_sync_event","text":"common use case smartabaseR help automate certain data wrangling /modelling tasks Smartabase. running sb_sync_event() schedule (.e. 15 minute cron job), can write logic triggers newly modified event data discovered. idea take new_sync_time value returned sb_sync_event() feed back subsequent call sb_sync_event() via last_sync_time argument.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_sync_event.html","id":"filters","dir":"Reference","previous_headings":"","what":"Filters","title":"Export modified event data since the last synchronisation time — sb_sync_event","text":"also range extra filters can supplied filter argument. order reduce argument clutter sb_sync_event(), optional filters must generated sb_sync_event_filter() function. Please see sb_sync_event_filter() details.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_sync_event.html","id":"options","dir":"Reference","previous_headings":"","what":"Options","title":"Export modified event data since the last synchronisation time — sb_sync_event","text":"also range extra options can supplied option argument. order reduce argument clutter sb_sync_event(), options must generated sb_sync_event_option() function. Please see sb_sync_event_option() details.","code":""},{"path":[]},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_sync_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export modified event data since the last synchronisation time — sb_sync_event","text":"","code":"if (FALSE) { # \\dontrun{ # Get any wellness data that has been modified since Jan 01 2023 (1672531200000): new_wellness_data <- sb_sync_event(   form = \"Daily Wellness\",   last_sync_time = 1672531200000,   url = \"example.smartabase.com/site\",   username = \"example.user\",   password = \"examplePassword\" ) } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_sync_event_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Set filter parameters for sb_sync_event() — sb_sync_event_filter","title":"Set filter parameters for sb_sync_event() — sb_sync_event_filter","text":"Set filter parameters sb_sync_event()","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_sync_event_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set filter parameters for sb_sync_event() — sb_sync_event_filter","text":"","code":"sb_sync_event_filter(user_key = NULL, user_value = NULL)"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_sync_event_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set filter parameters for sb_sync_event() — sb_sync_event_filter","text":"user_key type user variable filter . possible values c(\"\", \"username\", \"email\", \"group\", \"current_group\"). user_value specific user value filter e.g. user_key = \"username\", perhaps user_value = \"john.smith\".","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_sync_event_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set filter parameters for sb_sync_event() — sb_sync_event_filter","text":"list filters class = \"sb_export_filter\"","code":""},{"path":[]},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_sync_event_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set filter parameters for sb_sync_event() — sb_sync_event_filter","text":"","code":"if (FALSE) { # \\dontrun{ # Calling the function with no arguments returns all the defaults sb_sync_event_filter()  # Specifying specific arguments will alter those arguments alone while still # returning the other defaults sb_sync_event_filter(user_key = \"group\", user_value = \"Example Group\") } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_sync_event_option.html","id":null,"dir":"Reference","previous_headings":"","what":"Set option parameters for sb_sync_event() — sb_sync_event_option","title":"Set option parameters for sb_sync_event() — sb_sync_event_option","text":"Set option parameters sb_sync_event()","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_sync_event_option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set option parameters for sb_sync_event() — sb_sync_event_option","text":"","code":"sb_sync_event_option(   interactive_mode = TRUE,   include_user_data = TRUE,   cache = TRUE,   include_missing_user = FALSE,   guess_col_type = TRUE,   include_uuid = FALSE )"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_sync_event_option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set option parameters for sb_sync_event() — sb_sync_event_option","text":"interactive_mode TRUE, messages printed console. FALSE, suppressed. idea interactive_mode set FALSE automated environments ensure logs clogged progress messages. include_user_data TRUE, information like athlete's full name (.e. ) attached exported data frame. Setting FALSE can improve query performance since sb_get_event() need make extra API call grab user data. cache TRUE, login token user details cached per session. Similar include_user_data, caching can performance benefits user data set large, large Smartabase sites thousands users. invalidate cache, restart R session. include_missing_user TRUE, includes users recorded data form rows NA values. guess_col_type TRUE, sb_get_event() uses readr::type_convert() guess column types exported data frame. FALSE, columns come character. include_uuid TRUE, athlete's user-defined UUID (universally unique identifier) attached exported data frame. Note, different user_id, automatically generated Smartabase.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_sync_event_option.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set option parameters for sb_sync_event() — sb_sync_event_option","text":"list options class = \"sb_export_option\"","code":""},{"path":[]},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_sync_event_option.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set option parameters for sb_sync_event() — sb_sync_event_option","text":"","code":"if (FALSE) { # \\dontrun{ # Calling the function with no arguments returns all the defaults sb_sync_event_option()  # Specifying specific arguments will alter those arguments alone while still # returning the other defaults sb_sync_event_option(guess_col_type = FALSE, interactive_mode = FALSE) } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_update_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Update profile data — sb_update_event","title":"Update profile data — sb_update_event","text":"sb_update_event() imports data frame Smartabase event form using Smartabase API. requires user input data frame, valid Smartabase event form name, url credentials. data frame contains profile record already exists Smartabase, profile record updated. data frame must event_id column contains valid Smartabase event IDs. details see help vignette: vignette(\"importing-data\")","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_update_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update profile data — sb_update_event","text":"","code":"sb_update_event(   df,   form,   url,   username,   password,   ...,   option = sb_update_event_option() )"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_update_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update profile data — sb_update_event","text":"df Data imported Smartabase form Name Smartabase event form url Smartabase url e.g. \"example.smartabase.com/site\" username Smartabase username password Smartabase password ... dots future extensions must empty option options accessible via sb_update_event_option() object","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_update_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update profile data — sb_update_event","text":"Data frame extra details import status","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_update_event.html","id":"options","dir":"Reference","previous_headings":"","what":"Options","title":"Update profile data — sb_update_event","text":"also range extra options can supplied option argument, including options setting different ID column supplying names table fields, among others.  order reduce argument clutter sb_update_event(), options must generated sb_update_event_option() function. Please see sb_update_event_option() details.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_update_event_option.html","id":null,"dir":"Reference","previous_headings":"","what":"Set option parameters for sb_update_event_option() — sb_update_event_option","title":"Set option parameters for sb_update_event_option() — sb_update_event_option","text":"Set option parameters sb_update_event_option()","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_update_event_option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set option parameters for sb_update_event_option() — sb_update_event_option","text":"","code":"sb_update_event_option(   interactive_mode = TRUE,   id_col = c(\"user_id\", \"about\", \"username\", \"email\"),   table_field = NULL,   cache = TRUE )"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_update_event_option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set option parameters for sb_update_event_option() — sb_update_event_option","text":"interactive_mode TRUE, messages printed console. FALSE, suppressed. idea interactive_mode set FALSE ensure logs clogged progress messages automated environments. id_col Name column smartabaseR use user identifier. default Smartabase API requires \"user_id\" column, possible values \"\", \"username\" \"email\". table_field Smartabase tables used want store multiple rows data one event. importing data form contains table fields, must manually supply names fields character vector table_field argument within relevant import option helper function. equivalent ticking 'Treat records user, day single record?' Smartabase web app. cache TRUE, login token user details cached per session. invalidate cache, restart R session.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_update_event_option.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set option parameters for sb_update_event_option() — sb_update_event_option","text":"list options class = \"sb_import_option\"","code":""},{"path":[]},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_update_event_option.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set option parameters for sb_update_event_option() — sb_update_event_option","text":"","code":"if (FALSE) { # \\dontrun{ # Calling the function with no arguments returns all the defaults sb_update_event_option()  # Specifying specific arguments will alter those arguments alone while still # returning the other defaults sb_update_event_option(   id_col = \"about\",   table_field = c(\"Example Table Field Name\") ) } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_upsert_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsert event data — sb_upsert_event","title":"Upsert event data — sb_upsert_event","text":"sb_upsert_event() imports data frame Smartabase event form using Smartabase API. requires user input data frame, valid Smartabase event form name, url credentials. data frame contains event already exists Smartabase, event updated. data frame contains event exist Smartabase, event inserted new event. details see help vignette: vignette(\"importing-data\")","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_upsert_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsert event data — sb_upsert_event","text":"","code":"sb_upsert_event(   df,   form,   url,   username,   password,   ...,   option = sb_insert_event_option() )"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_upsert_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsert event data — sb_upsert_event","text":"df Data imported Smartabase form Name Smartabase event form url Smartabase url e.g. \"example.smartabase.com/site\" username Smartabase username password Smartabase password ... dots future extensions must empty option options accessible via sb_upsert_event_option() object","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_upsert_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsert event data — sb_upsert_event","text":"Data frame extra details import status","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_upsert_event.html","id":"start-date-end-date-start-time-end-time-columns","dir":"Reference","previous_headings":"","what":"start_date / end_date / start_time / end_time columns","title":"Upsert event data — sb_upsert_event","text":"uploading data Smartabase, API requires metadata event started stopped. sb_upsert_event() first search columns data named \"start_time\" \"end_time\", must values h:mm h:mm PM format. columns exist, start_time end_time set current time one hour current time, respectively. Likewise, sb_upsert_event() also search columns named \"start_date\" \"end_date\", must values formatted dd/mm/YYYY. columns exist, start_date end_date set current date (unless difference start_time end_time spans midnight, case end_date set current date plus one day).","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_upsert_event.html","id":"options","dir":"Reference","previous_headings":"","what":"Options","title":"Upsert event data — sb_upsert_event","text":"also range extra options can supplied option argument, including options setting different ID column supplying names table fields, among others.  order reduce argument clutter sb_upsert_event(), options must generated sb_upsert_event_option() function. Please see sb_upsert_event_option() details.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_upsert_event_option.html","id":null,"dir":"Reference","previous_headings":"","what":"Set option parameters for sb_upsert_event_option() — sb_upsert_event_option","title":"Set option parameters for sb_upsert_event_option() — sb_upsert_event_option","text":"Set option parameters sb_upsert_event_option()","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_upsert_event_option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set option parameters for sb_upsert_event_option() — sb_upsert_event_option","text":"","code":"sb_upsert_event_option(   interactive_mode = TRUE,   id_col = c(\"user_id\", \"about\", \"username\", \"email\"),   table_field = NULL,   cache = TRUE )"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_upsert_event_option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set option parameters for sb_upsert_event_option() — sb_upsert_event_option","text":"interactive_mode TRUE, messages printed console. FALSE, suppressed. idea interactive_mode set FALSE ensure logs clogged progress messages automated environments. id_col Name column smartabaseR use user identifier. default Smartabase API requires \"user_id\" column, possible values \"\", \"username\" \"email\". table_field Smartabase tables used want store multiple rows data one event. importing data form contains table fields, must manually supply names fields character vector table_field argument within relevant import option helper function. equivalent ticking 'Treat records user, day single record?' Smartabase web app. cache TRUE, login token user details cached per session. invalidate cache, restart R session.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_upsert_event_option.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set option parameters for sb_upsert_event_option() — sb_upsert_event_option","text":"list options class = \"sb_import_option\"","code":""},{"path":[]},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_upsert_event_option.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set option parameters for sb_upsert_event_option() — sb_upsert_event_option","text":"","code":"if (FALSE) { # \\dontrun{ # Calling the function with no arguments returns all the defaults sb_upsert_event_option()  # Specifying specific arguments will alter those arguments alone while still # returning the other defaults sb_upsert_event_option(   id_col = \"about\",   table_field = c(\"Example Table Field Name\") ) } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_upsert_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsert profile data — sb_upsert_profile","title":"Upsert profile data — sb_upsert_profile","text":"sb_upsert_profile() imports data frame Smartabase event form using Smartabase API. requires user input data frame, valid Smartabase event form name, url credentials. data frame contains profile record already exists Smartabase, profile record updated. data frame contains profile record exist Smartabase, profile record inserted new profile record. details see help vignette: vignette(\"importing-data\")","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_upsert_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsert profile data — sb_upsert_profile","text":"","code":"sb_upsert_profile(   df,   form,   url,   username,   password,   ...,   option = sb_upsert_profile_option() )"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_upsert_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsert profile data — sb_upsert_profile","text":"df Data imported Smartabase form Name Smartabase event form url Smartabase url e.g. \"example.smartabase.com/site\" username Smartabase username password Smartabase password ... dots future extensions must empty option options accessible via sb_upsert_profile_option() object","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_upsert_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsert profile data — sb_upsert_profile","text":"Data frame extra details import status","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_upsert_profile.html","id":"options","dir":"Reference","previous_headings":"","what":"Options","title":"Upsert profile data — sb_upsert_profile","text":"also range extra options can supplied option argument, including options setting different ID column supplying names table fields, among others.  order reduce argument clutter sb_upsert_profile(), options must generated sb_upsert_profile_option() function. Please see sb_upsert_profile_option() details.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_upsert_profile_option.html","id":null,"dir":"Reference","previous_headings":"","what":"Set option parameters for sb_upsert_profile_option() — sb_upsert_profile_option","title":"Set option parameters for sb_upsert_profile_option() — sb_upsert_profile_option","text":"Set option parameters sb_upsert_profile_option()","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_upsert_profile_option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set option parameters for sb_upsert_profile_option() — sb_upsert_profile_option","text":"","code":"sb_upsert_profile_option(   interactive_mode = TRUE,   id_col = c(\"user_id\", \"about\", \"username\", \"email\"),   table_field = NULL,   cache = TRUE )"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_upsert_profile_option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set option parameters for sb_upsert_profile_option() — sb_upsert_profile_option","text":"interactive_mode TRUE, messages printed console. FALSE, suppressed. idea interactive_mode set FALSE ensure logs clogged progress messages automated environments. id_col Name column smartabaseR use user identifier. default Smartabase API requires \"user_id\" column, possible values \"\", \"username\" \"email\". table_field Smartabase tables used want store multiple rows data one event. importing data form contains table fields, must manually supply names fields character vector table_field argument within relevant import option helper function. equivalent ticking 'Treat records user, day single record?' Smartabase web app. cache TRUE, login token user details cached per session. invalidate cache, restart R session.","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_upsert_profile_option.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set option parameters for sb_upsert_profile_option() — sb_upsert_profile_option","text":"list options class = \"sb_import_option\"","code":""},{"path":[]},{"path":"https://teamworksapp.github.io/smartabaseR/reference/sb_upsert_profile_option.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set option parameters for sb_upsert_profile_option() — sb_upsert_profile_option","text":"","code":"if (FALSE) { # \\dontrun{ # Calling the function with no arguments returns all the defaults sb_upsert_profile_option()  # Specifying specific arguments will alter those arguments alone while still # returning the other defaults sb_upsert_profile_option(   id_col = \"about\",   table_field = c(\"Example Table Field Name\") ) } # }"},{"path":"https://teamworksapp.github.io/smartabaseR/reference/smartabaseR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"smartabaseR: R Wrapper for the Smartabase API — smartabaseR-package","title":"smartabaseR: R Wrapper for the Smartabase API — smartabaseR-package","text":"R wrapper Smartabase API. Export, import delete Smartabase data R.","code":""},{"path":[]},{"path":"https://teamworksapp.github.io/smartabaseR/reference/smartabaseR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"smartabaseR: R Wrapper for the Smartabase API — smartabaseR-package","text":"Maintainer: Zac Pross zpross@teamworks.com Authors: James Day jday@teamworks.com contributors: Teamworks [copyright holder, funder]","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/reference/smartabaseR.html","id":null,"dir":"Reference","previous_headings":"","what":"smartabaseR package — smartabaseR","title":"smartabaseR package — smartabaseR","text":"R wrapper Smartabase API","code":""},{"path":"https://teamworksapp.github.io/smartabaseR/news/index.html","id":"smartabaser-0010","dir":"Changelog","previous_headings":"","what":"smartabaseR 0.0.10","title":"smartabaseR 0.0.10","text":"Initial CRAN submission.","code":""}]
